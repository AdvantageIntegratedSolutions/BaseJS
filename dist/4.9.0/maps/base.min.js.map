{"version":3,"sources":["base.min.js"],"names":["BaseConnect","config","this","inverseTables","BaseHelpers","tables","apptoken","token","async","databaseId","username","password","quickstartConfig","quickstart","ticket","realm","proxies","local","_self","post","data","callback","handler","type","action","postData","buildPostData","dbid","xmlPost","generateQuickbaseQuery","query","validQuery","handleEx","key","value","handleOtherOperators","operators","Object","keys","queryParts","i","length","operator","compareValue","queryPart","forEach","v","push","join","handleOr","replaceFieldNames","split","map","test","field","match","isNaN","fid","replace","replaceOptionFieldNames","fieldName","handleXMLCharacters","string","createParameter","params","fieldParams","fieldValue","createFieldParameter","fidParams","createFidParameter","csvData","createCSVParameter","xml","getNode","response","tag","$","find","text","getRecords","records","recordsArray","record","fields","j","id","parseInt","attr","url","sections","filename","tableConfig","toString","getRids","ridsArray","getNewRids","rids","rid","getFields","schema","fieldsObj","fieldHash","fieldType","label","nowrap","bold","required","appears_by_default","find_enabled","allow_new_choices","sort_as_given","carrychoices","foreignkey","unique","doesdatacopy","fieldhelp","display_user","default_kind","choices","fieldChoices","choice","getReports","reports","reportsObj","report","reportHash","name","criteria","clist","slist","options","formatUserRoles","users","allUsers","user","roles","userRoles","role","roleHash","accessId","access","userHash","firstName","lastName","lastAccess","lastAccessAppLocal","param","ignoreEncoding","body","base64Encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","keyStr","utfText","n","c","charCodeAt","String","fromCharCode","charAt","quickstartPost","proxy","json","JSON","parse","getCookie","stringify","dataType","contentType","error","ajax","qbaseResponseCode","code","message","context","qbaseResponse","Base","BaseConnectInstance","Table","removeQuickstartConfig","tableName","doQuery","handle","queryParams","fmt","returnpercentage","isQid","qid","table","prototype","call","3","in","first","last","all","XEX","doQueryCount","addRecord","editRecord","changeRecordOwner","owner","newowner","copyMasterDetail","getRecordInfo","allFields","info","num_fields","update_id","deleteRecord","purgeRecords","numberOfRecordDeleted","importFromCSV","csvArray","csv","row","rowValues","getTableFields","genAddRecordForm","getNumRecords","setFieldProperties","getTableReports","setTables","getOneTimeTicket","authenticate","auth","hours","signOut","getDBVar","varname","setDBVar","uploadPage","pagetype","pagebody","deletePage","pageId","pageid","getDbPage","pageID","cloneDatabase","createDatabase","description","createAppToken","dbname","dbdesc","createapptoken","deleteDatabase","renameApp","newappname","findDbByName","getTables","tablesObj","tableId","getAppDtmInfo","allTables","tableHash","lastModifiedTime","lastRecModTime","requestTime","requestNextAllowedTime","getDbInfo","createdTime","numRecords","mgrID","mgrName","version","time_zone","grantedDbs","allDatabases","databases","database","databaseHash","getUserInfo","email","login","screenName","isVerified","externalAuth","getUserRoles","changeUserRole","userId","roleId","newRoleId","register","setCookie","signIn","changePassword","timeZone","format","d","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","substring","indexOf","newObject","getUrlParam","regex","RegExp","results","exec","location","search","decodeURIComponent","formatDateElement","element","dateToString","milliseconds","date","month","getUTCMonth","day","getUTCDate","getUTCFullYear","dateTimeToString","today","toLowerCase","trim","stdTimezoneOffset","jan","getFullYear","jul","Math","max","getTimezoneOffset","dst","zoneOffsets","utc","eastern","central","mountain","pacific","offset","getUTCHours","minutes","getUTCMinutes","dateTime","getUTCSeconds","ampm","durationToString","result","ms","formatType","days","seconds","console","log","round","timeOfDayToString","timeOfDay","setHours","setMinutes","setSeconds","setMilliseconds","getHours","getMinutes","redirectToEditForm","root","window","redirectToViewForm","downloadFile"],"mappings":"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","file":"base.min.js","sourcesContent":["function BaseConnect(config){\n  this.config = config;\n  this.inverseTables = BaseHelpers.inverseTables(config.tables);\n  this.apptoken = config.token;\n  this.async = config.async || false;\n  this.databaseId = config.databaseId;\n  this.username = config.username;\n  this.password = config.password;\n  this.quickstartConfig = config.quickstart || false;\n  this.ticket = config.ticket;\n  this.realm = config.realm;\n  this.proxies = {\n    local: \"https://i460ti6d92.execute-api.us-east-1.amazonaws.com/prod\",\n    quickstart: \"https://zzcogtljc7.execute-api.us-east-1.amazonaws.com/prod/proxy\"\n  };\n\n  _self = this;\n\n  this.post = function(data, callback, handler){\n    var type = data.type || \"API\";\n    var action = type + \"_\" + data.action;\n    var postData = this.buildPostData(data.dbid, data);\n    var dbid = \"\";\n\n    if(!data.dbid){\n      dbid = \"main\";\n    }else{\n      if(this.config && data.dbid != \"main\"){\n        if(data.dbid == this.databaseId){\n          dbid = this.databaseId;\n        }else{\n          dbid = this.config.tables[data.dbid].dbid;\n        };\n      }else{\n        dbid = data.dbid;\n      };\n    };\n\n    return this.xmlPost(dbid, action, postData, callback, handler);\n  };\n\n  this.generateQuickbaseQuery = function(query){\n    var validQuery = [];\n\n    var handleEx = function(key, value){\n      return \"{'\"+key+\"'.EX.'\"+value+\"'}\";\n    };\n\n    var handleOtherOperators = function(key, value){\n      var operators = Object.keys(value);\n\n      var queryParts = [];\n      for(var i=0; i < operators.length; i++){\n        var operator = operators[i];\n\n        var compareValue = value[operator];\n        var queryPart = \"\";\n\n        if(operator == \"in\"){\n          var queryParts = [];\n\n          compareValue.forEach(function(v){\n            queryParts.push(\"{'\"+key+\"'.EX.'\"+v+\"'}\");\n          });\n\n          queryPart = \"(\" + queryParts.join(\"OR\") + \")\";\n        }else{\n          queryPart = \"{'\"+key+\"'.\"+operator+\".'\"+compareValue+\"'}\";\n        };\n\n        queryParts.push(queryPart);\n      };\n\n      return queryParts.join(\"AND\");\n    };\n\n    var handleOr = function(key, value){\n      var queryPart = [];\n\n      value.forEach(function(query){\n        var key = Object.keys(query)[0];\n        var value = query[key];\n\n        if(typeof value == \"object\"){\n          var query = handleOtherOperators(key, value);\n          queryPart.push(query);\n        }else{\n          var query = handleEx(key, value);\n          queryPart.push(query);\n        };\n      });\n\n      return \"(\" + queryPart.join(\"OR\") + \")\";\n    };\n\n    for(var key in query){\n      var value = query[key];\n      var queryPart = \"\";\n\n      if(key == \"or\"){\n        queryPart = handleOr(key, value);\n      }else{\n        if(typeof value == \"object\"){\n          queryPart = handleOtherOperators(key, value);\n        }else{\n          queryPart = handleEx(key, query[key]);\n        };\n      };\n\n      validQuery.push(queryPart);\n    };\n\n    validQuery = validQuery.join(\"AND\");\n    return validQuery;\n  };\n\n  this.replaceFieldNames = function(query, dbid){\n    var config = this.config;\n\n    query = query.split(/(}AND|\\)AND|}OR|\\)OR)/).map(function(queryPart){\n      if(!/(}AND|\\)AND|}OR|\\)OR)/.test(queryPart)){\n        var field = queryPart.match(/\\{'*(.*)'\\..*'/)[1];\n\n        if(isNaN(field)){\n          var fid = config.tables[dbid][field];\n          queryPart = queryPart.replace(field, fid);\n        };\n      };\n\n      return queryPart;\n    });\n\n    return query.join(\"\");\n  };\n\n  this.replaceOptionFieldNames = function(value, dbid){\n    var config = this.config;\n\n    value = value.split(\".\");\n    value = value.map(function(fieldName){\n      if(isNaN(fieldName)){\n        var fid = config.tables[dbid][fieldName];\n        return fid;\n      }else{\n        return fieldName;\n      }\n    });\n\n    return value.join(\".\");\n  };\n\n  this.handleXMLCharacters = function(string){\n    if(typeof string == \"string\"){\n      string = string\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;')\n    };\n    \n    return string;\n  };\n\n  this.buildPostData = function(dbid, data){\n    var postData = [\"<qdbapi>\"];\n\n    if(this.apptoken){\n      postData.push(this.createParameter(\"apptoken\", this.apptoken));\n    };\n\n    if(this.username && !this.ticket){\n      postData.push(this.createParameter(\"username\", this.username));\n      postData.push(this.createParameter(\"password\", this.password));\n    };\n\n    if(this.ticket){\n      postData.push(this.createParameter(\"ticket\", this.ticket));\n    };\n\n    for(var key in data.params){\n      var value = data.params[key];\n\n      if(key == \"clist\" || key == \"slist\" || key == \"options\"){\n        if(typeof value == \"object\"){\n          value = value.join(\".\");\n        };\n\n        if(this.config && (key == \"clist\" || key == \"slist\")){\n          if(value){\n            value = this.replaceOptionFieldNames(value, dbid);\n          };\n        };\n      }else if(key == \"query\"){\n        value = this.generateQuickbaseQuery(value);\n\n        if(this.config){\n          value = this.replaceFieldNames(value, dbid);\n        };\n\n        key = \"query\";\n      };\n\n      if(value){\n        postData.push(this.createParameter(key, value));\n      };\n    };\n\n    for(field in data.fieldParams){\n      if(this.config){\n        var fid = this.config.tables[dbid][field];\n      }else{\n        var fid = field;\n      };\n\n      var fieldValue = this.handleXMLCharacters(data.fieldParams[field]);\n      postData.push(this.createFieldParameter(fid, fieldValue));\n    };\n\n    for(key in data.fidParams){\n      postData.push(this.createFidParameter(key, data.fidParams[key]));\n    };\n\n    if(data.csvData){\n      postData.push(this.createCSVParameter(data.csvData));\n    };\n\n    postData.push(\"</qdbapi>\");\n    postData = postData.join(\"\");\n\n    if(this.username || this.quickstartConfig){\n      return { \"xml\": postData }\n    }else{\n      return postData;\n    };\n  };\n\n  this.getNode = function(response, tag){\n    return $(response).find(tag).text();\n  };\n\n  this.getRecords = function(dbid, response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var recordsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      var fields = $(record).find(\"f\");\n\n      record = {}\n\n      for(var j=0; j < fields.length; j++){\n        var field = fields[j];\n        var id = parseInt($(field).attr(\"id\"));\n\n        if($(field).find(\"url\").text() != \"\"){\n          var url = $(field).find(\"url\").text();\n          var sections = url.split(\"/\");\n          var filename = sections[sections.length - 1];\n\n          var value = {\"filename\": filename, \"url\": url};\n        }else{\n          var value = $(field).text();\n        };\n\n        if(this.config){\n          var tableConfig = this.inverseTables[dbid];\n          if(tableConfig[id]){\n            id = tableConfig[id.toString()];\n            record[id] = value;\n          };\n        }else{\n          record[id] = value;\n        };\n      };\n\n      recordsArray.push(record);\n    };\n\n    return recordsArray;\n  };\n\n  this.getRids = function(response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var ridsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      ridsArray.push($(record).find('f[id=\"3\"]').text());\n    };\n\n    return ridsArray;\n  };\n\n  this.getNewRids = function(response){\n    var rids = $(response).find(\"rids\").find(\"rid\");\n    var ridsArray = [];\n\n    for(var i=0; i < rids.length; i++){\n      var rid = parseInt($(rids[i]).text());\n      ridsArray.push(rid);\n    };\n\n    return ridsArray;\n  };\n\n  this.getFields = function(schema){\n    var fields = $(schema).find(\"fields\").find(\"field\");\n    var fieldsObj = {};\n\n    for(var i=0; i < fields.length; i++){\n      var field = fields[i];\n\n      var fieldHash = {\n        \"fid\": $(field).attr(\"id\"),\n        \"fieldType\": $(field).attr(\"field_type\"),\n        \"label\": $(field).find(\"label\").text(),\n        \"nowrap\": $(field).find(\"nowrap\").text(),\n        \"bold\": $(field).find(\"bold\").text(),\n        \"required\": $(field).find(\"required\").text(),\n        \"appears_by_default\": $(field).find(\"appears_by_default\").text(),\n        \"find_enabled\": $(field).find(\"find_enabled\").text(),\n        \"allow_new_choices\": $(field).find(\"allow_new_choices\").text(),\n        \"sort_as_given\": $(field).find(\"sort_as_given\").text(),\n        \"carrychoices\": $(field).find(\"carrychoices\").text(),\n        \"foreignkey\": $(field).find(\"foreignkey\").text(),\n        \"unique\": $(field).find(\"unique\").text(),\n        \"doesdatacopy\": $(field).find(\"doesdatacopy\").text(),\n        \"fieldhelp\": $(field).find(\"fieldhelp\").text(),\n        \"display_user\": $(field).find(\"display_user\").text(),\n        \"default_kind\": $(field).find(\"default_kind\").text()\n      }\n\n      var choices = $(field).find(\"choices\").find(\"choice\");\n\n      if(choices.length > 0){\n        var fieldChoices = [];\n        for(var j=0; j < choices.length; j++){\n\n          var choice = $(choices[j]).text();\n          fieldChoices.push(choice);\n        };\n\n        fieldHash[\"choices\"] = fieldChoices;\n      };\n\n      fieldsObj[$(field).attr(\"id\")] = fieldHash;\n    };\n\n    return fieldsObj;\n  };\n\n  this.getReports = function(schema){\n    var reports = $(schema).find(\"queries\").find(\"query\");\n    var reportsObj = {};\n\n    for(var i=0; i < reports.length; i++){\n      var report = reports[i];\n      var reportHash = {\n        \"name\": $(report).find(\"qyname\").text(),\n        \"type\": $(report).find(\"qytype\").text(),\n        \"criteria\": $(report).find(\"qycrit\").text(),\n        \"clist\": $(report).find(\"qyclst\").text(),\n        \"slist\": $(report).find(\"qyslst\").text(),\n        \"options\": $(report).find(\"qyopts\").text()\n      }\n\n      reportsObj[$(report).attr(\"id\")] = reportHash;\n    };\n\n    return reportsObj;\n  };\n\n  this.formatUserRoles = function(schema){\n    var users = $(schema).find(\"users\").find(\"user\");\n    var allUsers = [];\n\n    for(var i=0; i < users.length; i++){\n      var user = users[i];\n      var roles = $(user).find(\"roles\").find(\"role\");\n\n      var userRoles = [];\n      for(var j=0; j < roles.length; j++){\n        var role = roles[j];\n        var roleHash = {\n          \"id\": $(role).attr(\"id\"),\n          \"name\": $(role).find(\"name\").text(),\n          \"accessId\": $(role).find(\"access\").attr(\"id\"),\n          \"access\": $(role).find(\"access\").text()\n        }\n\n        userRoles.push(roleHash);\n      };\n\n      var userHash = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"lastAccess\": $(user).find(\"lastAccess\").text(),\n        \"lastAccessAppLocal\": $(user).find(\"lastAccessAppLocal\").text(),\n        \"roles\": userRoles\n      };\n\n      allUsers.push(userHash);\n    };\n\n    return allUsers;\n  };\n\n  this.createParameter = function(key, value){\n    return \"<\" + key + \">\" + value + \"</\" + key + \">\";\n  };\n\n  this.createFieldParameter = function(fid, value){\n    var param = \"<field fid='\" + fid + \"'\";\n\n    if(value){\n      if(value.filename){\n        param += \" filename='\" + value.filename + \"'>\";\n\n        if(value.ignoreEncoding == true){\n          param += value.body;\n        }else{\n          param += this.base64Encode(value.body);\n        };\n      }else{\n        param += \">\"\n        param += value;\n      };\n    }else{\n      param += \">\";\n    };\n\n    param += \"</field>\";\n    return param;\n  };\n\n  this.createFidParameter = function(fid, value){\n    return \"<_fid_\" + fid + \">\" + value + \"</_fid_\" + fid + \">\";\n  };\n\n  this.createCSVParameter = function(data){\n    return \"<records_csv><![CDATA[\" + data + \"]]></records_csv>\";\n  };\n\n  this.base64Encode = function(input){\n    var output = \"\";\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    var string = input.replace(/\\r\\n/g,\"\\n\");\n    var utfText = \"\";\n\n    for(var n=0; n < string.length; n++){\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utfText += String.fromCharCode(c);\n      }\n      else if((c > 127) && (c < 2048)) {\n        utfText += String.fromCharCode((c >> 6) | 192);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n      else {\n        utfText += String.fromCharCode((c >> 12) | 224);\n        utfText += String.fromCharCode(((c >> 6) & 63) | 128);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n    }\n\n    input = utfText;\n\n    while(i < input.length){\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n\n      if(isNaN(chr2)){\n        enc3 = enc4 = 64;\n      }else if(isNaN(chr3)){\n        enc4 = 64;\n      };\n\n      output = output +\n      keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) + keyStr.charAt(enc4);\n    };\n\n    return output;\n  };\n\n  this.quickstartPost = function(data, callback, handler, dbid, action, proxy){\n    if(proxy){ \n      var json = {\n        dbid: dbid,\n        realm: this.realm,\n        action: action,\n        apptoken: this.apptoken\n      };\n\n      json[\"xml\"] = data.xml;\n      json[\"quickstartAction\"] = \"Proxy\";\n      json[\"ticket\"] = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n    }else{\n      var json = data;\n    };\n    \n    json = JSON.stringify(json)\n\n    var postData = {\n      url: this.proxies.quickstart,\n      data: json,\n      dataType: \"text\",\n      type: \"POST\",\n      contentType: \"application/json\"\n    };\n\n    if(this.async == \"callback\"){\n    \tpostData[\"success\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn callback(json);\n    \t\t} else {\n    \t\t\treturn callback(handler(json));\n    \t\t}\n    \t};\n\n    \t$.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n      postData[\"dataFilter\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn json;\n    \t\t} else {\n    \t\t\treturn handler(json);\n    \t\t}\n    \t};\n\n      return $.ajax(postData);\n    };\n  };\n\n  this.qbaseResponseCode = function(response){\n    var code = $(response).find(\"errcode\").text();\n    var message = $(response).find(\"errtext\").text();\n\n    return { error: { code: code, message: message }};\n  };\n\n  this.xmlPost = function(dbid, action, data, callback, handler){\n    if(this.quickstartConfig){\n      return _self.quickstartPost(data, callback, handler, dbid, action, true);\n    };\n\n    var url = \"/db/\" + dbid + \"?act=\" + action;\n    var postData = {\n      url: url,\n      data: data,\n      dataType: \"xml\",\n      type: \"POST\",\n      context: this,\n      contentType: \"text/xml\"\n    };\n\n    //local development\n    if(this.username){\n      data[\"realm\"] = this.realm;\n      data[\"call\"] = action;\n      data[\"apptoken\"] = this.apptoken || \"\";\n      data[\"dbid\"] = dbid;\n\n      postData[\"dataType\"] = \"text\";\n      postData[\"contentType\"] = \"application/json\";\n\n      postData[\"url\"] = this.proxies.local;\n      postData[\"data\"] = JSON.stringify(data);\n    };\n\n    if(this.async == \"callback\"){\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          return callback(qbaseResponse);\n        }else{\n          return callback(handler(xml));\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      $.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n\n      postData[\"dataFilter\"] = function(xml){\n        var qbaseResponse = _self.qbaseResponseCode(xml);\n        \n        if(qbaseResponse.error.code != \"0\"){\n          return qbaseResponse;\n        }else{\n          return handler(xml);\n        };\n      };\n\n      return $.ajax(postData);\n    }else{\n      var response = null;\n\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          response = qbaseResponse;\n        }else{\n          response = handler(xml);\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      postData[\"async\"] = false;\n\n      $.ajax(postData);\n\n      return response;\n    };\n  };\n}\n\nfunction Base(config){\n  var BaseConnectInstance = new BaseConnect(config);\n  this.databaseId = config.databaseId;\n\n  this.Table = function(key, config){\n    this.removeQuickstartConfig = function(config){\n      delete config[\"quickstart_users\"];\n      delete config[\"quickstart_username\"];\n      delete config[\"quickstart_password\"];\n      delete config[\"quickstart_key\"];\n      return config;\n    };\n\n    if(BaseConnectInstance.config.quickstart){\n      config = this.removeQuickstartConfig(config);\n    };\n\n    this[key] = config;\n    this.tableName = key;\n    this.dbid = config.dbid;\n\n    this.doQuery = function(query, params, callback, handle){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        return BaseConnectInstance.getRecords(tableName, response, \"records\");\n      };\n\n      var queryParams = {\"fmt\": \"structured\", \"returnpercentage\": \"1\"}\n      if(query){\n        var isQid = !isNaN(query);\n\n        if(isQid){\n          queryParams.qid = query;\n        }else{\n          queryParams.query = query;\n        };\n      }else{\n        queryParams.query = \"{'3'.XEX.''}\"\n      };\n\n      if(params){\n        var clist = params.clist;\n      }else{\n        var params = {};\n      };\n\n      if(BaseConnectInstance.config && !clist){\n        var table = BaseConnectInstance.config.tables[tableName];\n\n        var clist = [];\n        for(key in table){\n          var value = table[key];\n\n          if(!isNaN(value)){\n            clist.push(key);\n          };\n        };\n\n        params.clist = clist.join(\".\");\n      };\n\n      queryParams.clist = params.clist;\n      queryParams.slist = params.slist\n      queryParams.options = params.options\n\n      var data = {\n        dbid: tableName,\n        action: \"DoQuery\",\n        params: queryParams\n      };\n\n      if(handle){\n        this.handle = handle;\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.find = function(rid, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          if(records.length > 1){\n            return records;\n          }else{\n            return records[0];\n          };\n        }else{\n          return {};\n        };\n      };\n\n      if(Object.prototype.toString.call(rid) == \"[object Array]\"){\n        var query = { \"3\": { in: rid }}\n      }else{\n        var query = { \"3\": rid };\n      };\n\n      return this.doQuery(query, null, callback, this.handle);\n    };\n\n    this.first = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[0];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.last = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[records.length - 1];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.all = function(params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records;\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery({ \"3\": { XEX: \"\" } }, params, callback, this.handle);\n    };\n\n    this.getRids = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getRids(response);\n      };\n\n      params = {\n        clist: \"3\"\n      };\n\n      if(!query){\n        query = { \"3\": { XEX: \"\" } }\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.doQueryCount = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"numMatches\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DoQueryCount\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.addRecord = function(fieldParams, callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"rid\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"AddRecord\",\n        fieldParams: fieldParams\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.editRecord = function(rid, fieldParams, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"EditRecord\",\n        fieldParams: fieldParams,\n        params: {\"rid\": rid}\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.changeRecordOwner = function(rid, owner, callback){\n      this.handle = function(response){\n        return true;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ChangeRecordOwner\",\n        params: {\"rid\": rid, \"newowner\": owner}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.copyMasterDetail = function(params, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"parentrid\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"CopyMasterDetail\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getRecordInfo = function(rid, callback){\n      this.handle = function(response){\n\n        var allFields = {};\n        var fields = $(response).find(\"field\");\n\n        for(var i=0; i < fields.length; i++){\n          var field = fields[i];\n          var fieldHash = {\n            \"name\": BaseConnectInstance.getNode(field, \"name\"),\n            \"type\": BaseConnectInstance.getNode(field, \"type\"),\n            \"value\": BaseConnectInstance.getNode(field, \"value\")\n          };\n\n          allFields[$(field).find(\"fid\").text()] = fieldHash;\n        };\n\n        var info = {\n          \"rid\": BaseConnectInstance.getNode(response, \"rid\"),\n          \"num_fields\": BaseConnectInstance.getNode(response, \"num_fields\"),\n          \"update_id\": BaseConnectInstance.getNode(response, \"update_id\"),\n          \"fields\": allFields\n        };\n\n        return info;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetRecordInfo\",\n        params: { \"rid\": rid }\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.deleteRecord = function(rid, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DeleteRecord\",\n        params: {\"rid\": rid}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.purgeRecords = function(query, callback){\n      this.handle = function(response){\n        var numberOfRecordDeleted = BaseConnectInstance.getNode(response, \"num_records_deleted\");\n        return parseInt(numberOfRecordDeleted);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"PurgeRecords\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.importFromCSV = function(csvArray, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNewRids(response);\n      };\n\n      var csv = \"\";\n      var clist = [];\n\n      for(key in csvArray[0]){\n        if(BaseConnectInstance.config){\n          tableConfig = BaseConnectInstance.config.tables[this.tableName];\n          key = tableConfig[key];\n        };\n\n        clist.push(key);\n      };\n\n      clist = clist.join(\".\");\n\n      for(var i=0; i < csvArray.length; i++){\n        var row = csvArray[i];\n        var rowValues = [];\n\n        for(key in row){\n          value = row[key];\n          value = value.toString().replace(/\"/g, '\"\"');\n          rowValues.push('\"' + value + '\"');\n        };\n\n        rowValues.join(\",\")\n        rowValues += \"\\n\"\n\n        csv += (rowValues);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ImportFromCSV\",\n        params: {\"clist\": clist},\n        csvData: csv\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableFields = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getFields(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.genAddRecordForm = function(params, callback){\n      this.handle = function(response){\n        return response;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GenAddRecordForm\",\n        fidParams: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getNumRecords = function(callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"num_records\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetNumRecords\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.setFieldProperties = function(fid, params, callback){\n      this.handle = function(response){\n        var error = BaseConnectInstance.getNode(response, \"errcode\");\n        return error == 0 ? true : false;\n      };\n\n      params[\"fid\"] = fid;\n\n      var data = {\n        dbid: this.tableName,\n        action: \"SetFieldProperties\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableReports = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getReports(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n  };\n\n  this.setTables = function(tables){\n    for(var key in tables){\n      this[key] = new this.Table(key, tables[key]);\n    };\n  };\n\n  this.setTables(config.tables);\n\n  this.getOneTimeTicket = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"GetOneTimeTicket\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.authenticate = function(auth, hours, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"Authenticate\",\n      params: { \"hours\": hours }\n    };\n\n    if(auth.ticket){\n      data[\"ticket\"] = auth.ticket;\n    };\n\n    if(auth.username && auth.password){\n      data[\"username\"] = auth.username;\n      data[\"password\"] = auth.password;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.signOut = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      action: \"SignOut\",\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDBVar = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"value\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBvar\",\n      params: {\"varname\": name}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle)\n  };\n\n  this.setDBVar = function(name, value, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"SetDBvar\",\n      params: {\"varname\": name, \"value\": value}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.uploadPage = function(id, name, body, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pageID\");\n    };\n\n    var params = {\n      \"pagetype\": \"1\",\n      \"pagebody\": body\n    };\n\n    if(id){\n      params[\"pageid\"] = id;\n    }else if(name){\n      params[\"pagename\"] = name;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"AddReplaceDBPage\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deletePage = function(pageId, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"PageDelete\",\n      type: \"QBI\",\n      params: {\"pageid\": pageId}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbPage = function(pageId, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pagebody\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBPage\",\n      type: \"API\",\n      params: { \"pageID\": pageId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.cloneDatabase = function(params, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"newdbid\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"CloneDatabase\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.createDatabase = function(name, description, createAppToken, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"CreateDatabase\",\n      type: \"API\",\n      params: { \"dbname\": name, \"dbdesc\": description, \"createapptoken\": createAppToken || false }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deleteDatabase = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"DeleteDatabase\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.renameApp = function(name, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"RenameApp\",\n      type: \"API\",\n      params: { \"newappname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.findDbByName = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"FindDBByName\",\n      type: \"API\",\n      params: { \"dbname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getTables = function(callback){\n    this.handle = function(schema){\n      var tables = $(schema).find(\"table\").find(\"chdbid\");\n      var tablesObj = {};\n\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableName = $(table).attr(\"name\");\n        var tableId = $(table).text();\n\n        tablesObj[tableName] = tableId;\n      }\n\n      return tablesObj;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetSchema\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getAppDtmInfo = function(callback){\n    this.handle = function(response){\n\n      var allTables = {};\n      var tables = $(response).find(\"tables\").find(\"table\");\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableHash = {\n          \"lastModifiedTime\": $(table).find(\"lastModifiedTime\").text(),\n          \"lastRecModTime\": $(table).find(\"lastRecModTime\").text()\n        };\n\n        allTables[$(table).attr(\"id\")] = tableHash;\n      };\n\n      var info = {\n        \"requestTime\": BaseConnectInstance.getNode(response, \"RequestTime\"),\n        \"requestNextAllowedTime\": BaseConnectInstance.getNode(response, \"RequestNextAllowedTime\"),\n        \"lastModifiedTime\": BaseConnectInstance.getNode(response, \"lastModifiedTime\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"tables\": allTables\n      };\n\n      return info;\n    };\n\n    var data = {\n      action: \"GetAppDTMInfo\",\n      type: \"API\",\n      params: { \"dbid\": this.databaseId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbInfo = function(callback){\n    this.handle = function(response){\n      var info = {\n        \"dbname\": BaseConnectInstance.getNode(response, \"dbname\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"createdTime\": BaseConnectInstance.getNode(response, \"createdTime\"),\n        \"numRecords\": BaseConnectInstance.getNode(response, \"numRecords\"),\n        \"mgrID\": BaseConnectInstance.getNode(response, \"mgrID\"),\n        \"mgrName\": BaseConnectInstance.getNode(response, \"mgrName\"),\n        \"version\": BaseConnectInstance.getNode(response, \"version\"),\n        \"time_zone\": BaseConnectInstance.getNode(response, \"time_zone\")\n      };\n\n      return info;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBInfo\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.grantedDbs = function(params, callback){\n    this.handle = function(response){\n\n      var allDatabases = [];\n      var databases = $(response).find(\"databases\").find(\"dbinfo\");\n\n      for(var i=0; i < databases.length; i++){\n        var database = databases[i];\n        var databaseHash = {\n          \"dbname\": BaseConnectInstance.getNode(database, \"dbname\"),\n          \"dbid\": BaseConnectInstance.getNode(database, \"dbid\")\n        };\n\n        allDatabases.push(databaseHash);\n      };\n\n      return allDatabases;\n    };\n\n    var data = {\n      action: \"GrantedDBs\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserInfo = function(email, callback, handler){\n    this.handle = function(response){\n      var user = $(response).find(\"user\");\n\n      user = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"login\": $(user).find(\"login\").text(),\n        \"email\": $(user).find(\"email\").text(),\n        \"screenName\": $(user).find(\"screenName\").text(),\n        \"isVerified\": $(user).find(\"isVerified\").text(),\n        \"externalAuth\": $(user).find(\"externalAuth\").text()\n      };\n\n      return user;\n    };\n\n    if(!email){\n      email = \"\";\n    };\n\n    var data = {\n      dbid: \"main\",\n      action: \"GetUserInfo\",\n      params: {\"email\": email}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserRoles = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.formatUserRoles(response);\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"UserRoles\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.changeUserRole = function(userId, roleId, newRoleId, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"ChangeUserRole\",\n      params: {\n        userId: userId,\n        roleId: roleId\n      }\n    };\n\n    if(newRoleId){\n      data[\"params\"][\"newRoleId\"] = newRoleId;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.quickstart = {\n    register: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 2);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n        \n        return response;\n      };\n\n      data[\"quickstartAction\"] = \"Register\";\n      data[\"appToken\"] = config.token;\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    signIn: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 2);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n\n        return response;\n      };\n\n      data[\"quickstartAction\"] = \"SignIn\";\n      data[\"appToken\"] = config.token;\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    signOut: function(callback){\n      BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n\n      if(callback){\n      \tcallback(true);\n      }\n    },\n\n    changePassword: function(data, callback){\n      this.handler = function(response){\n        return response;\n      };\n\n      data[\"ticket\"] = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n      data[\"quickstartAction\"] = \"ChangePassword\";\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    }\n  }\n}\n\nvar BaseHelpers = {\n  options: {\n    timeZone: 'utc',\n    format: 'hours'\n  },\n\n  setCookie: function(name, value, hours) {\n    var d = new Date();\n    d.setTime(d.getTime() + (hours*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n\n    document.cookie = name + \"=\" + value + \"; \" + expires;\n  },\n\n  getCookie: function(name) {\n    var name = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0)==' ') {\n        c = c.substring(1);\n      };\n      \n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length,c.length);\n      };\n    }\n    return \"\";\n  },\n\n  inverseTables: function(config){\n    var inverseTables = {};\n\n    for(var table in config){\n      var newObject = {};\n\n      for(var field in config[table]){\n        newObject[config[table][field].toString()] = field;\n      };\n\n      inverseTables[table] = newObject;\n    };\n\n    return inverseTables;\n  },\n\n  getUrlParam: function(name){\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  },\n\n  formatDateElement: function(element){\n    element = element.toString();\n    if(element.length == 1){\n      element = \"0\" + element;\n    };\n\n    return element;\n  },\n\n  dateToString: function(milliseconds){\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) );\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n\n      date = [month, day, date.getUTCFullYear()].join(\"-\");\n\n      return date;\n    } else {\n      return ' ';\n    }\n  },\n\n  dateTimeToString: function(milliseconds, timeZone) {\n    var today = new Date();\n    var timeZone = timeZone ? timeZone.toLowerCase().trim() : this.options.timeZone.toLowerCase();\n\n    Date.prototype.stdTimezoneOffset = function() {\n      var jan = new Date(this.getFullYear(), 0, 1);\n      var jul = new Date(this.getFullYear(), 6, 1);\n      return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n    }\n\n    Date.prototype.dst = function() {\n      return this.getTimezoneOffset() < this.stdTimezoneOffset();\n    }\n\n    var zoneOffsets = {\n      \"utc\": 0,\n      \"eastern\": today.dst() ? -4 : -5,\n      \"central\": today.dst() ? -5 : -6,\n      \"mountain\": today.dst() ? -6 : -7,\n      \"pacific\": today.dst() ? -7 : -8\n    };\n\n    var offset = zoneOffsets[timeZone];\n\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) + (60 * 60 * 1000 * offset) );\n\n      var year = this.formatDateElement((date.getUTCFullYear));\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n      var hours = this.formatDateElement(date.getUTCHours());\n      var minutes = this.formatDateElement(date.getUTCMinutes());\n      var seconds = this.formatDateElement(date.getUTCSeconds());\n\n      var dateTime = [month, day, date.getUTCFullYear()].join(\"-\");\n      var ampm = parseInt(hours) >= 12 ? 'PM' : 'AM';\n\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n\n      dateTime += \" \"\n      dateTime += [hours, minutes].join(\":\")\n      dateTime += \" \" + ampm\n      return dateTime;\n    } else {\n      return '';\n    }\n  },\n\n  durationToString: function(milliseconds, format) {\n    var ms = parseInt(milliseconds);\n    var result;\n    var format = format ? format.trim().toLowerCase() : this.options.format.toLowerCase();\n\n    var formatType = {\n      \"days\": function() {\n        return ms / 86400000;\n      },\n      \"hours\": function() {\n        return ms / 3600000;\n      },\n      \"minutes\": function() {\n        return ms / 60000;\n      },\n      \"seconds\": function() {\n        return ms / 1000;\n      }\n    };\n\n    if(milliseconds) {\n      if (formatType[format]) {\n        result = formatType[format]();\n      }\n      else {\n        result = formatType[\"hours\"]();\n        console.log(\"The format parameter passed to BaseHelpers.durationToString() was incorrect. Using the format for 'hours' instead.\");\n      }\n\n      result = Math.round(result * 100) / 100;\n      return result.toString();\n    } else {\n      return '';\n    }\n  },\n\n  timeOfDayToString: function(milliseconds){\n    var timeOfDay = \"\";\n\n    timeOfDay = new Date()\n    timeOfDay.setHours(\"\");\n    timeOfDay.setMinutes(\"\");\n    timeOfDay.setSeconds(\"\");\n    timeOfDay.setMilliseconds(milliseconds);\n\n    var hours = timeOfDay.getHours().toString();\n    var minutes = timeOfDay.getMinutes().toString();\n    var ampm = hours > 12 ? \"pm\" : \"am\";\n\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes.length > 1 ? minutes : \"0\" + minutes;\n\n    timeOfDay = hours + \":\" + minutes + \" \" + ampm\n\n    return timeOfDay;\n  },\n\n  redirectToEditForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=er&rid=\" + rid;\n  },\n\n  redirectToViewForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=dr&rid=\" + rid;\n  },\n\n  downloadFile: function(dbid, rid, fid, version){\n    var version = version || 0;\n\n    window.location = \"https://www.quickbase.com/up/\"+dbid+\"/a/r\"+rid+\"/e\"+fid+\"/v\" + version;\n  }\n};"],"sourceRoot":"/source/"}