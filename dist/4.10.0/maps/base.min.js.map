{"version":3,"sources":["base.min.js"],"names":["BaseConnect","config","this","inverseTables","BaseHelpers","tables","apptoken","token","async","databaseId","username","password","quickstartConfig","quickstart","ticket","realm","proxies","local","_self","post","data","callback","handler","type","action","postData","buildPostData","dbid","xmlPost","generateQuickbaseQuery","query","validQuery","handleEx","key","value","handleOtherOperators","operators","Object","keys","queryParts","i","length","operator","compareValue","queryPart","forEach","v","push","join","handleOr","replaceFieldNames","split","map","test","field","match","isNaN","fid","replace","replaceOptionFieldNames","fieldName","handleXMLCharacters","string","createParameter","params","fieldParams","fieldValue","createFieldParameter","fidParams","createFidParameter","csvData","createCSVParameter","xml","getNode","response","tag","$","find","text","getRecords","records","recordsArray","record","fields","j","id","parseInt","attr","url","sections","filename","tableConfig","toString","getRids","ridsArray","getNewRids","rids","rid","getTableSchema","schema","tableSchema","tableName","keyFid","getFields","$schema","fieldsObj","$field","fieldHash","fieldType","label","nowrap","bold","required","appears_by_default","find_enabled","allow_new_choices","sort_as_given","carrychoices","foreignkey","unique","doesdatacopy","fieldhelp","display_user","default_kind","choices","fieldChoices","choice","getReports","reports","reportsObj","report","reportHash","name","criteria","clist","slist","options","formatUserRoles","users","allUsers","user","roles","userRoles","role","roleHash","accessId","access","userHash","firstName","lastName","lastAccess","lastAccessAppLocal","param","ignoreEncoding","body","base64Encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","keyStr","utfText","n","c","charCodeAt","String","fromCharCode","charAt","quickstartPost","proxy","json","JSON","parse","getCookie","stringify","dataType","contentType","error","ajax","qbaseResponseCode","code","message","context","qbaseResponse","Base","BaseConnectInstance","Table","removeQuickstartConfig","doQuery","handle","queryParams","fmt","returnpercentage","isQid","qid","table","prototype","call","3","in","first","last","all","XEX","doQueryCount","addRecord","editRecord","changeRecordOwner","owner","newowner","copyMasterDetail","getRecordInfo","allFields","info","num_fields","update_id","deleteRecord","purgeRecords","numberOfRecordDeleted","importFromCSV","csvArray","csv","row","rowValues","getTableFields","genAddRecordForm","getNumRecords","setFieldProperties","getTableReports","setTables","getOneTimeTicket","authenticate","auth","hours","signOut","getDBVar","varname","setDBVar","uploadPage","pagetype","pagebody","deletePage","pageId","pageid","getDbPage","pageID","cloneDatabase","createDatabase","description","createAppToken","dbname","dbdesc","createapptoken","deleteDatabase","renameApp","newappname","findDbByName","getTables","tablesObj","tableId","getAppDtmInfo","allTables","tableHash","lastModifiedTime","lastRecModTime","requestTime","requestNextAllowedTime","getDbInfo","createdTime","numRecords","mgrID","mgrName","version","time_zone","grantedDbs","allDatabases","databases","database","databaseHash","getUserInfo","email","login","screenName","isVerified","externalAuth","getUserRoles","changeUserRole","userId","roleId","newRoleId","register","setCookie","signIn","changePassword","timeZone","format","d","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","substring","indexOf","newObject","getUrlParam","regex","RegExp","results","exec","location","search","decodeURIComponent","formatDateElement","element","dateToString","milliseconds","date","month","getUTCMonth","day","getUTCDate","getUTCFullYear","dateTimeToString","today","toLowerCase","trim","stdTimezoneOffset","jan","getFullYear","jul","Math","max","getTimezoneOffset","dst","zoneOffsets","utc","eastern","central","mountain","pacific","offset","getUTCHours","minutes","getUTCMinutes","dateTime","getUTCSeconds","ampm","durationToString","result","ms","formatType","days","seconds","console","log","round","timeOfDayToString","timeOfDay","setHours","setMinutes","setSeconds","setMilliseconds","getHours","getMinutes","redirectToEditForm","root","window","redirectToViewForm","downloadFile"],"mappings":"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","file":"base.min.js","sourcesContent":["function BaseConnect(config){\n  this.config = config;\n  this.inverseTables = BaseHelpers.inverseTables(config.tables);\n  this.apptoken = config.token;\n  this.async = config.async || false;\n  this.databaseId = config.databaseId;\n  this.username = config.username;\n  this.password = config.password;\n  this.quickstartConfig = config.quickstart || false;\n  this.ticket = config.ticket;\n  this.realm = config.realm;\n  this.proxies = {\n    local: \"https://i460ti6d92.execute-api.us-east-1.amazonaws.com/prod\",\n    quickstart: \"https://zzcogtljc7.execute-api.us-east-1.amazonaws.com/prod/proxy\"\n  };\n\n  _self = this;\n\n  this.post = function(data, callback, handler){\n    var type = data.type || \"API\";\n    var action = type + \"_\" + data.action;\n    var postData = this.buildPostData(data.dbid, data);\n    var dbid = \"\";\n\n    if(!data.dbid){\n      dbid = \"main\";\n    }else{\n      if(this.config && data.dbid != \"main\"){\n        if(data.dbid == this.databaseId){\n          dbid = this.databaseId;\n        }else{\n          dbid = this.config.tables[data.dbid].dbid;\n        };\n      }else{\n        dbid = data.dbid;\n      };\n    };\n\n    return this.xmlPost(dbid, action, postData, callback, handler);\n  };\n\n  this.generateQuickbaseQuery = function(query){\n    var validQuery = [];\n\n    var handleEx = function(key, value){\n      return \"{'\"+key+\"'.EX.'\"+value+\"'}\";\n    };\n\n    var handleOtherOperators = function(key, value){\n      var operators = Object.keys(value);\n\n      var queryParts = [];\n      for(var i=0; i < operators.length; i++){\n        var operator = operators[i];\n\n        var compareValue = value[operator];\n        var queryPart = \"\";\n\n        if(operator == \"in\"){\n          var queryParts = [];\n\n          compareValue.forEach(function(v){\n            queryParts.push(\"{'\"+key+\"'.EX.'\"+v+\"'}\");\n          });\n\n          queryPart = \"(\" + queryParts.join(\"OR\") + \")\";\n        }else{\n          queryPart = \"{'\"+key+\"'.\"+operator+\".'\"+compareValue+\"'}\";\n        };\n\n        queryParts.push(queryPart);\n      };\n\n      return queryParts.join(\"AND\");\n    };\n\n    var handleOr = function(key, value){\n      var queryPart = [];\n\n      value.forEach(function(query){\n        var key = Object.keys(query)[0];\n        var value = query[key];\n\n        if(typeof value == \"object\"){\n          var query = handleOtherOperators(key, value);\n          queryPart.push(query);\n        }else{\n          var query = handleEx(key, value);\n          queryPart.push(query);\n        };\n      });\n\n      return \"(\" + queryPart.join(\"OR\") + \")\";\n    };\n\n    for(var key in query){\n      var value = query[key];\n      var queryPart = \"\";\n\n      if(key == \"or\"){\n        queryPart = handleOr(key, value);\n      }else{\n        if(typeof value == \"object\"){\n          queryPart = handleOtherOperators(key, value);\n        }else{\n          queryPart = handleEx(key, query[key]);\n        };\n      };\n\n      validQuery.push(queryPart);\n    };\n\n    validQuery = validQuery.join(\"AND\");\n    return validQuery;\n  };\n\n  this.replaceFieldNames = function(query, dbid){\n    var config = this.config;\n\n    query = query.split(/(}AND|\\)AND|}OR|\\)OR)/).map(function(queryPart){\n      if(!/(}AND|\\)AND|}OR|\\)OR)/.test(queryPart)){\n        var field = queryPart.match(/\\{'*(.*)'\\..*'/)[1];\n\n        if(isNaN(field)){\n          var fid = config.tables[dbid][field];\n          queryPart = queryPart.replace(field, fid);\n        };\n      };\n\n      return queryPart;\n    });\n\n    return query.join(\"\");\n  };\n\n  this.replaceOptionFieldNames = function(value, dbid){\n    var config = this.config;\n\n    value = value.split(\".\");\n    value = value.map(function(fieldName){\n      if(isNaN(fieldName)){\n        var fid = config.tables[dbid][fieldName];\n        return fid;\n      }else{\n        return fieldName;\n      }\n    });\n\n    return value.join(\".\");\n  };\n\n  this.handleXMLCharacters = function(string){\n    if(typeof string == \"string\"){\n      string = string\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;')\n    };\n\n    return string;\n  };\n\n  this.buildPostData = function(dbid, data){\n    var postData = [\"<qdbapi>\"];\n\n    if(this.apptoken){\n      postData.push(this.createParameter(\"apptoken\", this.apptoken));\n    };\n\n    if(this.username && !this.ticket){\n      postData.push(this.createParameter(\"username\", this.username));\n      postData.push(this.createParameter(\"password\", this.password));\n    };\n\n    if(this.ticket){\n      postData.push(this.createParameter(\"ticket\", this.ticket));\n    };\n\n    for(var key in data.params){\n      var value = data.params[key];\n\n      if(key == \"clist\" || key == \"slist\" || key == \"options\"){\n        if(typeof value == \"object\"){\n          value = value.join(\".\");\n        };\n\n        if(this.config && (key == \"clist\" || key == \"slist\")){\n          if(value){\n            value = this.replaceOptionFieldNames(value, dbid);\n          };\n        };\n      }else if(key == \"query\"){\n        value = this.generateQuickbaseQuery(value);\n\n        if(this.config){\n          value = this.replaceFieldNames(value, dbid);\n        };\n\n        key = \"query\";\n      };\n\n      if(value){\n        postData.push(this.createParameter(key, value));\n      };\n    };\n\n    for(field in data.fieldParams){\n      if(this.config){\n        var fid = this.config.tables[dbid][field];\n      }else{\n        var fid = field;\n      };\n\n      var fieldValue = this.handleXMLCharacters(data.fieldParams[field]);\n      postData.push(this.createFieldParameter(fid, fieldValue));\n    };\n\n    for(key in data.fidParams){\n      postData.push(this.createFidParameter(key, data.fidParams[key]));\n    };\n\n    if(data.csvData){\n      postData.push(this.createCSVParameter(data.csvData));\n    };\n\n    postData.push(\"</qdbapi>\");\n    postData = postData.join(\"\");\n\n    if(this.username || this.quickstartConfig){\n      return { \"xml\": postData }\n    }else{\n      return postData;\n    };\n  };\n\n  this.getNode = function(response, tag){\n    return $(response).find(tag).text();\n  };\n\n  this.getRecords = function(dbid, response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var recordsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      var fields = $(record).find(\"f\");\n\n      record = {}\n\n      for(var j=0; j < fields.length; j++){\n        var field = fields[j];\n        var id = parseInt($(field).attr(\"id\"));\n\n        if($(field).find(\"url\").text() != \"\"){\n          var url = $(field).find(\"url\").text();\n          var sections = url.split(\"/\");\n          var filename = sections[sections.length - 1];\n\n          var value = {\"filename\": filename, \"url\": url};\n        }else{\n          var value = $(field).text();\n        };\n\n        if(this.config){\n          var tableConfig = this.inverseTables[dbid];\n          if(tableConfig[id]){\n            id = tableConfig[id.toString()];\n            record[id] = value;\n          };\n        }else{\n          record[id] = value;\n        };\n      };\n\n      recordsArray.push(record);\n    };\n\n    return recordsArray;\n  };\n\n  this.getRids = function(response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var ridsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      ridsArray.push($(record).find('f[id=\"3\"]').text());\n    };\n\n    return ridsArray;\n  };\n\n  this.getNewRids = function(response){\n    var rids = $(response).find(\"rids\").find(\"rid\");\n    var ridsArray = [];\n\n    for(var i=0; i < rids.length; i++){\n      var rid = parseInt($(rids[i]).text());\n      ridsArray.push(rid);\n    };\n\n    return ridsArray;\n  };\n\n  this.getTableSchema = function(schema) {\n    var tableSchema = {\n      dbid: '',\n      tableName: '',\n      keyFid: '',\n      fields: this.getFields(schema)\n    };\n\n    var $schema = $(schema);\n    tableSchema.dbid = $schema.find('table_id').text();\n    tableSchema.tableName = $schema.find('name').text();\n    tableSchema.keyFid = $schema.find('key_fid').text();\n\n    return tableSchema;\n  };\n\n  this.getFields = function(schema){\n    var fields = $(schema + ', fields').find(\"field\");\n    var fieldsObj = {};\n\n    for(var i=0; i < fields.length; i++){\n      var $field = $(fields[i]);\n\n      var fieldHash = {\n        \"fid\": $field.attr(\"id\"),\n        \"fieldType\": $field.attr(\"field_type\"),\n        \"label\": $field.find(\"label\").text(),\n        \"nowrap\": $field.find(\"nowrap\").text(),\n        \"bold\": $field.find(\"bold\").text(),\n        \"required\": $field.find(\"required\").text(),\n        \"appears_by_default\": $field.find(\"appears_by_default\").text(),\n        \"find_enabled\": $field.find(\"find_enabled\").text(),\n        \"allow_new_choices\": $field.find(\"allow_new_choices\").text(),\n        \"sort_as_given\": $field.find(\"sort_as_given\").text(),\n        \"carrychoices\": $field.find(\"carrychoices\").text(),\n        \"foreignkey\": $field.find(\"foreignkey\").text(),\n        \"unique\": $field.find(\"unique\").text(),\n        \"doesdatacopy\": $field.find(\"doesdatacopy\").text(),\n        \"fieldhelp\": $field.find(\"fieldhelp\").text(),\n        \"display_user\": $field.find(\"display_user\").text(),\n        \"default_kind\": $field.find(\"default_kind\").text()\n      }\n\n      var choices = $field.find(\"choices\").find(\"choice\");\n\n      if(choices.length > 0){\n        var fieldChoices = [];\n        for(var j=0; j < choices.length; j++){\n\n          var choice = $(choices[j]).text();\n          fieldChoices.push(choice);\n        };\n\n        fieldHash[\"choices\"] = fieldChoices;\n      };\n\n      fieldsObj[$field.attr(\"id\")] = fieldHash;\n    };\n\n    return fieldsObj;\n  };\n\n  this.getReports = function(schema){\n    var reports = $(schema).find(\"queries\").find(\"query\");\n    var reportsObj = {};\n\n    for(var i=0; i < reports.length; i++){\n      var report = reports[i];\n      var reportHash = {\n        \"name\": $(report).find(\"qyname\").text(),\n        \"type\": $(report).find(\"qytype\").text(),\n        \"criteria\": $(report).find(\"qycrit\").text(),\n        \"clist\": $(report).find(\"qyclst\").text(),\n        \"slist\": $(report).find(\"qyslst\").text(),\n        \"options\": $(report).find(\"qyopts\").text()\n      }\n\n      reportsObj[$(report).attr(\"id\")] = reportHash;\n    };\n\n    return reportsObj;\n  };\n\n  this.formatUserRoles = function(schema){\n    var users = $(schema).find(\"users\").find(\"user\");\n    var allUsers = [];\n\n    for(var i=0; i < users.length; i++){\n      var user = users[i];\n      var roles = $(user).find(\"roles\").find(\"role\");\n\n      var userRoles = [];\n      for(var j=0; j < roles.length; j++){\n        var role = roles[j];\n        var roleHash = {\n          \"id\": $(role).attr(\"id\"),\n          \"name\": $(role).find(\"name\").text(),\n          \"accessId\": $(role).find(\"access\").attr(\"id\"),\n          \"access\": $(role).find(\"access\").text()\n        }\n\n        userRoles.push(roleHash);\n      };\n\n      var userHash = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"lastAccess\": $(user).find(\"lastAccess\").text(),\n        \"lastAccessAppLocal\": $(user).find(\"lastAccessAppLocal\").text(),\n        \"roles\": userRoles\n      };\n\n      allUsers.push(userHash);\n    };\n\n    return allUsers;\n  };\n\n  this.createParameter = function(key, value){\n    return \"<\" + key + \">\" + value + \"</\" + key + \">\";\n  };\n\n  this.createFieldParameter = function(fid, value){\n    var param = \"<field fid='\" + fid + \"'\";\n\n    if(value){\n      if(value.filename){\n        param += \" filename='\" + value.filename + \"'>\";\n\n        if(value.ignoreEncoding == true){\n          param += value.body;\n        }else{\n          param += this.base64Encode(value.body);\n        };\n      }else{\n        param += \">\"\n        param += value;\n      };\n    }else{\n      param += \">\";\n    };\n\n    param += \"</field>\";\n    return param;\n  };\n\n  this.createFidParameter = function(fid, value){\n    return \"<_fid_\" + fid + \">\" + value + \"</_fid_\" + fid + \">\";\n  };\n\n  this.createCSVParameter = function(data){\n    return \"<records_csv><![CDATA[\" + data + \"]]></records_csv>\";\n  };\n\n  this.base64Encode = function(input){\n    var output = \"\";\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    var string = input.replace(/\\r\\n/g,\"\\n\");\n    var utfText = \"\";\n\n    for(var n=0; n < string.length; n++){\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utfText += String.fromCharCode(c);\n      }\n      else if((c > 127) && (c < 2048)) {\n        utfText += String.fromCharCode((c >> 6) | 192);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n      else {\n        utfText += String.fromCharCode((c >> 12) | 224);\n        utfText += String.fromCharCode(((c >> 6) & 63) | 128);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n    }\n\n    input = utfText;\n\n    while(i < input.length){\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n\n      if(isNaN(chr2)){\n        enc3 = enc4 = 64;\n      }else if(isNaN(chr3)){\n        enc4 = 64;\n      };\n\n      output = output +\n      keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) + keyStr.charAt(enc4);\n    };\n\n    return output;\n  };\n\n  this.quickstartPost = function(data, callback, handler, dbid, action, proxy){\n    if(proxy){\n      var json = {\n        dbid: dbid,\n        realm: this.realm,\n        action: action,\n        apptoken: this.apptoken\n      };\n\n      json[\"xml\"] = data.xml;\n      json[\"quickstartAction\"] = \"Proxy\";\n      json[\"ticket\"] = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n    }else{\n      var json = data;\n    };\n\n    json = JSON.stringify(json)\n\n    var postData = {\n      url: this.proxies.quickstart,\n      data: json,\n      dataType: \"text\",\n      type: \"POST\",\n      contentType: \"application/json\"\n    };\n\n    if(this.async == \"callback\"){\n    \tpostData[\"success\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn callback(json);\n    \t\t} else {\n    \t\t\treturn callback(handler(json));\n    \t\t}\n    \t};\n\n    \t$.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n      postData[\"dataFilter\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn json;\n    \t\t} else {\n    \t\t\treturn handler(json);\n    \t\t}\n    \t};\n\n      return $.ajax(postData);\n    };\n  };\n\n  this.qbaseResponseCode = function(response){\n    var code = $(response).find(\"errcode\").text();\n    var message = $(response).find(\"errtext\").text();\n    message += \", \" + $(response).find(\"errdetail\").text();\n\n    return { error: { code: code, message: message }};\n  };\n\n  this.xmlPost = function(dbid, action, data, callback, handler){\n    if(this.quickstartConfig){\n      return _self.quickstartPost(data, callback, handler, dbid, action, true);\n    };\n\n    var url = \"/db/\" + dbid + \"?act=\" + action;\n    var postData = {\n      url: url,\n      data: data,\n      dataType: \"xml\",\n      type: \"POST\",\n      context: this,\n      contentType: \"text/xml\"\n    };\n\n    //local development\n    if(this.username){\n      data[\"realm\"] = this.realm;\n      data[\"call\"] = action;\n      data[\"apptoken\"] = this.apptoken || \"\";\n      data[\"dbid\"] = dbid;\n\n      postData[\"dataType\"] = \"text\";\n      postData[\"contentType\"] = \"application/json\";\n\n      postData[\"url\"] = this.proxies.local;\n      postData[\"data\"] = JSON.stringify(data);\n    };\n\n    if(this.async == \"callback\"){\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          return callback(qbaseResponse);\n        }else{\n          return callback(handler(xml));\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      $.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n\n      postData[\"dataFilter\"] = function(xml){\n        var qbaseResponse = _self.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          return qbaseResponse;\n        }else{\n          return handler(xml);\n        };\n      };\n\n      return $.ajax(postData);\n    }else{\n      var response = null;\n\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          response = qbaseResponse;\n        }else{\n          response = handler(xml);\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      postData[\"async\"] = false;\n\n      $.ajax(postData);\n\n      return response;\n    };\n  };\n}\n\nfunction Base(config){\n  var BaseConnectInstance = new BaseConnect(config);\n  this.databaseId = config.databaseId;\n\n  this.Table = function(key, config){\n    this.removeQuickstartConfig = function(config){\n      delete config[\"quickstart_users\"];\n      delete config[\"quickstart_username\"];\n      delete config[\"quickstart_password\"];\n      delete config[\"quickstart_key\"];\n      return config;\n    };\n\n    if(BaseConnectInstance.config.quickstart){\n      config = this.removeQuickstartConfig(config);\n    };\n\n    this[key] = config;\n    this.tableName = key;\n    this.dbid = config.dbid;\n\n    this.doQuery = function(query, params, callback, handle){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        return BaseConnectInstance.getRecords(tableName, response, \"records\");\n      };\n\n      var queryParams = {\"fmt\": \"structured\", \"returnpercentage\": \"1\"}\n      if(query){\n        var isQid = !isNaN(query);\n\n        if(isQid){\n          queryParams.qid = query;\n        }else{\n          queryParams.query = query;\n        };\n      }else{\n        queryParams.query = \"{'3'.XEX.''}\"\n      };\n\n      if(params){\n        var clist = params.clist;\n      }else{\n        var params = {};\n      };\n\n      if(BaseConnectInstance.config && !clist){\n        var table = BaseConnectInstance.config.tables[tableName];\n\n        var clist = [];\n        for(key in table){\n          var value = table[key];\n\n          if(!isNaN(value)){\n            clist.push(key);\n          };\n        };\n\n        params.clist = clist.join(\".\");\n      };\n\n      queryParams.clist = params.clist;\n      queryParams.slist = params.slist\n      queryParams.options = params.options\n\n      var data = {\n        dbid: tableName,\n        action: \"DoQuery\",\n        params: queryParams\n      };\n\n      if(handle){\n        this.handle = handle;\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.find = function(rid, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          if(records.length > 1){\n            return records;\n          }else{\n            return records[0];\n          };\n        }else{\n          return {};\n        };\n      };\n\n      if(Object.prototype.toString.call(rid) == \"[object Array]\"){\n        var query = { \"3\": { in: rid }}\n      }else{\n        var query = { \"3\": rid };\n      };\n\n      return this.doQuery(query, null, callback, this.handle);\n    };\n\n    this.first = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[0];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.last = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[records.length - 1];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.all = function(params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records;\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery({ \"3\": { XEX: \"\" } }, params, callback, this.handle);\n    };\n\n    this.getRids = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getRids(response);\n      };\n\n      params = {\n        clist: \"3\"\n      };\n\n      if(!query){\n        query = { \"3\": { XEX: \"\" } }\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.doQueryCount = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"numMatches\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DoQueryCount\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.addRecord = function(fieldParams, callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"rid\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"AddRecord\",\n        fieldParams: fieldParams\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.editRecord = function(rid, fieldParams, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"EditRecord\",\n        fieldParams: fieldParams,\n        params: {\"rid\": rid}\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.changeRecordOwner = function(rid, owner, callback){\n      this.handle = function(response){\n        return true;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ChangeRecordOwner\",\n        params: {\"rid\": rid, \"newowner\": owner}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.copyMasterDetail = function(params, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"parentrid\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"CopyMasterDetail\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getRecordInfo = function(rid, callback){\n      this.handle = function(response){\n\n        var allFields = {};\n        var fields = $(response).find(\"field\");\n\n        for(var i=0; i < fields.length; i++){\n          var field = fields[i];\n          var fieldHash = {\n            \"name\": BaseConnectInstance.getNode(field, \"name\"),\n            \"type\": BaseConnectInstance.getNode(field, \"type\"),\n            \"value\": BaseConnectInstance.getNode(field, \"value\")\n          };\n\n          allFields[$(field).find(\"fid\").text()] = fieldHash;\n        };\n\n        var info = {\n          \"rid\": BaseConnectInstance.getNode(response, \"rid\"),\n          \"num_fields\": BaseConnectInstance.getNode(response, \"num_fields\"),\n          \"update_id\": BaseConnectInstance.getNode(response, \"update_id\"),\n          \"fields\": allFields\n        };\n\n        return info;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetRecordInfo\",\n        params: { \"rid\": rid }\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.deleteRecord = function(rid, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DeleteRecord\",\n        params: {\"rid\": rid}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.purgeRecords = function(query, callback){\n      this.handle = function(response){\n        var numberOfRecordDeleted = BaseConnectInstance.getNode(response, \"num_records_deleted\");\n        return parseInt(numberOfRecordDeleted);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"PurgeRecords\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.importFromCSV = function(csvArray, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNewRids(response);\n      };\n\n      var csv = \"\";\n      var clist = [];\n\n      for(key in csvArray[0]){\n        if(BaseConnectInstance.config){\n          tableConfig = BaseConnectInstance.config.tables[this.tableName];\n          key = tableConfig[key];\n        };\n\n        clist.push(key);\n      };\n\n      clist = clist.join(\".\");\n\n      for(var i=0; i < csvArray.length; i++){\n        var row = csvArray[i];\n        var rowValues = [];\n\n        for(key in row){\n          value = row[key];\n          value = value.toString().replace(/\"/g, '\"\"');\n          rowValues.push('\"' + value + '\"');\n        };\n\n        rowValues.join(\",\")\n        rowValues += \"\\n\"\n\n        csv += (rowValues);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ImportFromCSV\",\n        params: {\"clist\": clist},\n        csvData: csv\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableFields = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getTableSchema(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.genAddRecordForm = function(params, callback){\n      this.handle = function(response){\n        return response;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GenAddRecordForm\",\n        fidParams: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getNumRecords = function(callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"num_records\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetNumRecords\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.setFieldProperties = function(fid, params, callback){\n      this.handle = function(response){\n        var error = BaseConnectInstance.getNode(response, \"errcode\");\n        return error == 0 ? true : false;\n      };\n\n      params[\"fid\"] = fid;\n\n      var data = {\n        dbid: this.tableName,\n        action: \"SetFieldProperties\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableReports = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getReports(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n  };\n\n  this.setTables = function(tables){\n    for(var key in tables){\n      this[key] = new this.Table(key, tables[key]);\n    };\n  };\n\n  this.setTables(config.tables);\n\n  this.getOneTimeTicket = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"GetOneTimeTicket\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.authenticate = function(auth, hours, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"Authenticate\",\n      params: { \"hours\": hours }\n    };\n\n    if(auth.ticket){\n      data[\"ticket\"] = auth.ticket;\n    };\n\n    if(auth.username && auth.password){\n      data[\"username\"] = auth.username;\n      data[\"password\"] = auth.password;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.signOut = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      action: \"SignOut\",\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDBVar = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"value\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBvar\",\n      params: {\"varname\": name}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle)\n  };\n\n  this.setDBVar = function(name, value, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"SetDBvar\",\n      params: {\"varname\": name, \"value\": value}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.uploadPage = function(id, name, body, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pageID\");\n    };\n\n    var params = {\n      \"pagetype\": \"1\",\n      \"pagebody\": body\n    };\n\n    if(id){\n      params[\"pageid\"] = id;\n    }else if(name){\n      params[\"pagename\"] = name;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"AddReplaceDBPage\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deletePage = function(pageId, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"PageDelete\",\n      type: \"QBI\",\n      params: {\"pageid\": pageId}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbPage = function(pageId, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pagebody\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBPage\",\n      type: \"API\",\n      params: { \"pageID\": pageId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.cloneDatabase = function(params, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"newdbid\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"CloneDatabase\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.createDatabase = function(name, description, createAppToken, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"CreateDatabase\",\n      type: \"API\",\n      params: { \"dbname\": name, \"dbdesc\": description, \"createapptoken\": createAppToken || false }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deleteDatabase = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"DeleteDatabase\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.renameApp = function(name, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"RenameApp\",\n      type: \"API\",\n      params: { \"newappname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.findDbByName = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"FindDBByName\",\n      type: \"API\",\n      params: { \"dbname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getTables = function(callback){\n    this.handle = function(schema){\n      var tables = $(schema).find(\"chdbid\");\n      var tablesObj = {};\n\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableName = $(table).attr(\"name\");\n        var tableId = $(table).text();\n\n        tablesObj[tableName] = tableId;\n      }\n\n      return tablesObj;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetSchema\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getAppDtmInfo = function(callback){\n    this.handle = function(response){\n\n      var allTables = {};\n      var tables = $(response).find(\"tables\").find(\"table\");\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableHash = {\n          \"lastModifiedTime\": $(table).find(\"lastModifiedTime\").text(),\n          \"lastRecModTime\": $(table).find(\"lastRecModTime\").text()\n        };\n\n        allTables[$(table).attr(\"id\")] = tableHash;\n      };\n\n      var info = {\n        \"requestTime\": BaseConnectInstance.getNode(response, \"RequestTime\"),\n        \"requestNextAllowedTime\": BaseConnectInstance.getNode(response, \"RequestNextAllowedTime\"),\n        \"lastModifiedTime\": BaseConnectInstance.getNode(response, \"lastModifiedTime\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"tables\": allTables\n      };\n\n      return info;\n    };\n\n    var data = {\n      action: \"GetAppDTMInfo\",\n      type: \"API\",\n      params: { \"dbid\": this.databaseId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbInfo = function(callback){\n    this.handle = function(response){\n      var info = {\n        \"dbname\": BaseConnectInstance.getNode(response, \"dbname\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"createdTime\": BaseConnectInstance.getNode(response, \"createdTime\"),\n        \"numRecords\": BaseConnectInstance.getNode(response, \"numRecords\"),\n        \"mgrID\": BaseConnectInstance.getNode(response, \"mgrID\"),\n        \"mgrName\": BaseConnectInstance.getNode(response, \"mgrName\"),\n        \"version\": BaseConnectInstance.getNode(response, \"version\"),\n        \"time_zone\": BaseConnectInstance.getNode(response, \"time_zone\")\n      };\n\n      return info;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBInfo\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.grantedDbs = function(params, callback){\n    this.handle = function(response){\n\n      var allDatabases = [];\n      var databases = $(response).find(\"databases\").find(\"dbinfo\");\n\n      for(var i=0; i < databases.length; i++){\n        var database = databases[i];\n        var databaseHash = {\n          \"dbname\": BaseConnectInstance.getNode(database, \"dbname\"),\n          \"dbid\": BaseConnectInstance.getNode(database, \"dbid\")\n        };\n\n        allDatabases.push(databaseHash);\n      };\n\n      return allDatabases;\n    };\n\n    var data = {\n      action: \"GrantedDBs\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserInfo = function(email, callback, handler){\n    this.handle = function(response){\n      var user = $(response).find(\"user\");\n\n      user = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"login\": $(user).find(\"login\").text(),\n        \"email\": $(user).find(\"email\").text(),\n        \"screenName\": $(user).find(\"screenName\").text(),\n        \"isVerified\": $(user).find(\"isVerified\").text(),\n        \"externalAuth\": $(user).find(\"externalAuth\").text()\n      };\n\n      return user;\n    };\n\n    if(!email){\n      email = \"\";\n    };\n\n    var data = {\n      dbid: \"main\",\n      action: \"GetUserInfo\",\n      params: {\"email\": email}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserRoles = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.formatUserRoles(response);\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"UserRoles\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.changeUserRole = function(userId, roleId, newRoleId, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"ChangeUserRole\",\n      params: {\n        userId: userId,\n        roleId: roleId\n      }\n    };\n\n    if(newRoleId){\n      data[\"params\"][\"newRoleId\"] = newRoleId;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.quickstart = {\n    register: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 2);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n\n        return response;\n      };\n\n      data[\"quickstartAction\"] = \"Register\";\n      data[\"appToken\"] = config.token;\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    signIn: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 2);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n\n        return response;\n      };\n\n      data[\"quickstartAction\"] = \"SignIn\";\n      data[\"appToken\"] = config.token;\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    signOut: function(callback){\n      BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n\n      if(callback){\n      \tcallback(true);\n      }\n    },\n\n    changePassword: function(data, callback){\n      this.handler = function(response){\n        return response;\n      };\n\n      data[\"ticket\"] = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n      data[\"quickstartAction\"] = \"ChangePassword\";\n      data[\"realm\"] = config.realm;\n      data[\"dbid\"] = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    }\n  }\n}\n\nvar BaseHelpers = {\n  options: {\n    timeZone: 'utc',\n    format: 'hours'\n  },\n\n  setCookie: function(name, value, hours) {\n    var d = new Date();\n    d.setTime(d.getTime() + (hours*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n\n    document.cookie = name + \"=\" + value + \"; \" + expires;\n  },\n\n  getCookie: function(name) {\n    var name = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0)==' ') {\n        c = c.substring(1);\n      };\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length,c.length);\n      };\n    }\n    return \"\";\n  },\n\n  inverseTables: function(config){\n    var inverseTables = {};\n\n    for(var table in config){\n      var newObject = {};\n\n      for(var field in config[table]){\n        newObject[config[table][field].toString()] = field;\n      };\n\n      inverseTables[table] = newObject;\n    };\n\n    return inverseTables;\n  },\n\n  getUrlParam: function(name){\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  },\n\n  formatDateElement: function(element){\n    element = element.toString();\n    if(element.length == 1){\n      element = \"0\" + element;\n    };\n\n    return element;\n  },\n\n  dateToString: function(milliseconds){\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) );\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n\n      date = [month, day, date.getUTCFullYear()].join(\"-\");\n\n      return date;\n    } else {\n      return ' ';\n    }\n  },\n\n  dateTimeToString: function(milliseconds, timeZone) {\n    var today = new Date();\n    var timeZone = timeZone ? timeZone.toLowerCase().trim() : this.options.timeZone.toLowerCase();\n\n    Date.prototype.stdTimezoneOffset = function() {\n      var jan = new Date(this.getFullYear(), 0, 1);\n      var jul = new Date(this.getFullYear(), 6, 1);\n      return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n    }\n\n    Date.prototype.dst = function() {\n      return this.getTimezoneOffset() < this.stdTimezoneOffset();\n    }\n\n    var zoneOffsets = {\n      \"utc\": 0,\n      \"eastern\": today.dst() ? -4 : -5,\n      \"central\": today.dst() ? -5 : -6,\n      \"mountain\": today.dst() ? -6 : -7,\n      \"pacific\": today.dst() ? -7 : -8\n    };\n\n    var offset = zoneOffsets[timeZone];\n\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) + (60 * 60 * 1000 * offset) );\n\n      var year = this.formatDateElement((date.getUTCFullYear));\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n      var hours = this.formatDateElement(date.getUTCHours());\n      var minutes = this.formatDateElement(date.getUTCMinutes());\n      var seconds = this.formatDateElement(date.getUTCSeconds());\n\n      var dateTime = [month, day, date.getUTCFullYear()].join(\"-\");\n      var ampm = parseInt(hours) >= 12 ? 'PM' : 'AM';\n\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n\n      dateTime += \" \"\n      dateTime += [hours, minutes].join(\":\")\n      dateTime += \" \" + ampm\n      return dateTime;\n    } else {\n      return '';\n    }\n  },\n\n  durationToString: function(milliseconds, format) {\n    var ms = parseInt(milliseconds);\n    var result;\n    var format = format ? format.trim().toLowerCase() : this.options.format.toLowerCase();\n\n    var formatType = {\n      \"days\": function() {\n        return ms / 86400000;\n      },\n      \"hours\": function() {\n        return ms / 3600000;\n      },\n      \"minutes\": function() {\n        return ms / 60000;\n      },\n      \"seconds\": function() {\n        return ms / 1000;\n      }\n    };\n\n    if(milliseconds) {\n      if (formatType[format]) {\n        result = formatType[format]();\n      }\n      else {\n        result = formatType[\"hours\"]();\n        console.log(\"The format parameter passed to BaseHelpers.durationToString() was incorrect. Using the format for 'hours' instead.\");\n      }\n\n      result = Math.round(result * 100) / 100;\n      return result.toString();\n    } else {\n      return '';\n    }\n  },\n\n  timeOfDayToString: function(milliseconds){\n    var timeOfDay = \"\";\n\n    timeOfDay = new Date()\n    timeOfDay.setHours(\"\");\n    timeOfDay.setMinutes(\"\");\n    timeOfDay.setSeconds(\"\");\n    timeOfDay.setMilliseconds(milliseconds);\n\n    var hours = timeOfDay.getHours().toString();\n    var minutes = timeOfDay.getMinutes().toString();\n    var ampm = hours > 12 ? \"pm\" : \"am\";\n\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes.length > 1 ? minutes : \"0\" + minutes;\n\n    timeOfDay = hours + \":\" + minutes + \" \" + ampm\n\n    return timeOfDay;\n  },\n\n  redirectToEditForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=er&rid=\" + rid;\n  },\n\n  redirectToViewForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=dr&rid=\" + rid;\n  },\n\n  downloadFile: function(dbid, rid, fid, version){\n    var version = version || 0;\n\n    window.location = \"https://www.quickbase.com/up/\"+dbid+\"/a/r\"+rid+\"/e\"+fid+\"/v\" + version;\n  }\n};"],"sourceRoot":"/source/"}