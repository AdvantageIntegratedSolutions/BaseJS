{"version":3,"sources":["base.min.js"],"names":["BaseConnect","config","this","inverseTables","BaseHelpers","tables","apptoken","usertoken","async","databaseId","username","password","quickstartConfig","quickstart","ticket","realm","proxies","local","quickstartDev","_self","post","data","callback","handler","type","action","postData","buildPostData","dbid","xmlPost","generateQuickbaseQuery","query","validQuery","handleEx","key","value","handleOtherOperators","operators","Object","keys","queryParts","i","length","operator","compareValue","queryPart","forEach","v","push","join","handleOr","replaceFieldNames","split","map","test","field","match","isNaN","fid","replace","replaceOptionFieldNames","fieldName","handleXMLCharacters","string","createParameter","params","fieldParams","parseInt","toString","fieldValue","createFieldParameter","fidParams","createFidParameter","csvData","createCSVParameter","xml","getNode","response","tag","$","find","text","getRecords","records","recordsArray","record","fields","j","id","attr","url","sections","filename","tableConfig","getRids","ridsArray","getNewRids","rids","rid","getTableSchema","schema","tableSchema","tableName","keyFid","getFields","$schema","getAppSchemaInfo","currentTable","name","fieldsObj","$field","fieldHash","attributes","prop","val","children","each","childNode","nodeName","toLowerCase","innerText","choices","fieldChoices","choice","getReports","reports","reportsObj","report","reportHash","criteria","clist","slist","options","formatUserRoles","users","allUsers","user","roles","userRoles","role","roleHash","accessId","access","userHash","firstName","lastName","lastAccess","lastAccessAppLocal","param","ignoreEncoding","body","base64Encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","keyStr","utfText","n","c","charCodeAt","String","fromCharCode","charAt","quickstartPost","proxy","json","JSON","parse","getCookie","stringify","dataType","contentType","error","ajax","qbaseResponseCode","code","message","context","qbaseResponse","Base","BaseConnectInstance","baseConnectInstance","Table","removeQuickstartConfig","doQuery","handle","queryParams","fmt","returnpercentage","isQid","qid","table","prototype","call","3","in","first","last","all","XEX","doQueryCount","addRecord","editRecord","changeRecordOwner","owner","newowner","copyMasterDetail","getRecordInfo","allFields","info","num_fields","update_id","deleteRecord","purgeRecords","numberOfRecordDeleted","runImport","numberOfRecordsImported","importFromCSV","csvArray","csv","row","rowValues","getTableFields","genAddRecordForm","getNumRecords","setFieldProperties","getTableReports","setTables","getAppTables","getOneTimeTicket","authenticate","auth","hours","signOut","getDBVar","varname","setDBVar","uploadPage","pagetype","pagebody","deletePage","pageId","pageid","getDbPage","pageID","cloneDatabase","createDatabase","description","createAppToken","dbname","dbdesc","createapptoken","deleteDatabase","renameApp","newappname","findDbByName","getTables","tablesObj","tableId","getAppDtmInfo","allTables","tableHash","lastModifiedTime","lastRecModTime","requestTime","requestNextAllowedTime","getDbInfo","createdTime","numRecords","mgrID","mgrName","version","time_zone","grantedDbs","allDatabases","databases","database","databaseHash","getUserInfo","email","login","screenName","isVerified","externalAuth","getUserRoles","changeUserRole","userId","roleId","newRoleId","register","setCookie","quickstartAction","appToken","signIn","changePassword","forgotPassword","emailObj","resetPassword","timeZone","format","d","Date","setTime","getTime","expires","toUTCString","document","cookie","ca","substring","indexOf","newObject","getUrlParam","regex","RegExp","results","exec","location","search","decodeURIComponent","formatDateElement","element","dateToString","milliseconds","date","month","getUTCMonth","day","getUTCDate","getUTCFullYear","dateTimeToString","today","trim","stdTimezoneOffset","jan","getFullYear","jul","Math","max","getTimezoneOffset","dst","zoneOffsets","utc","eastern","central","mountain","pacific","offset","getUTCHours","minutes","getUTCMinutes","dateTime","getUTCSeconds","ampm","durationToString","result","ms","formatType","days","seconds","console","log","round","timeOfDayToString","timeOfDay","setHours","setMinutes","setSeconds","setMilliseconds","getHours","getMinutes","redirectToEditForm","root","window","redirectToViewForm","downloadFile"],"mappings":"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","file":"../base.min.js","sourcesContent":["function BaseConnect(config){\n  this.config = config;\n  this.inverseTables = BaseHelpers.inverseTables(config.tables);\n  this.apptoken = config.apptoken;\n  this.usertoken = config.usertoken;\n  this.async = config.async || false;\n  this.databaseId = config.databaseId;\n  this.username = config.username;\n  this.password = config.password;\n  this.quickstartConfig = config.quickstart || false;\n  this.ticket = config.ticket;\n  this.realm = config.realm;\n  this.proxies = {\n    local: \"https://i460ti6d92.execute-api.us-east-1.amazonaws.com/prod\",\n    quickstart: \"https://zzcogtljc7.execute-api.us-east-1.amazonaws.com/prod/proxy\",\n    quickstartDev: \"https://zzcogtljc7.execute-api.us-east-1.amazonaws.com/dev/proxy\"\n  };\n\n  _self = this;\n\n  this.post = function(data, callback, handler){\n    var type = data.type || \"API\";\n    var action = type + \"_\" + data.action;\n    var postData = this.buildPostData(data.dbid, data);\n    var dbid = \"\";\n\n    if(!data.dbid){\n      dbid = \"main\";\n    }else{\n      if(this.config && data.dbid != \"main\"){\n        if(data.dbid == this.databaseId){\n          dbid = this.databaseId;\n        }else{\n          dbid = this.config.tables[data.dbid].dbid;\n        };\n      }else{\n        dbid = data.dbid;\n      };\n    };\n\n    return this.xmlPost(dbid, action, postData, callback, handler);\n  };\n\n  this.generateQuickbaseQuery = function(query){\n    var validQuery = [];\n\n    var handleEx = function(key, value){\n      return \"{'\"+key+\"'.EX.'\"+value+\"'}\";\n    };\n\n    var handleOtherOperators = function(key, value){\n      var operators = Object.keys(value);\n\n      var queryParts = [];\n      for(var i=0; i < operators.length; i++){\n        var operator = operators[i];\n\n        var compareValue = value[operator];\n        var queryPart = \"\";\n\n        if(operator == \"in\"){\n          var queryParts = [];\n\n          compareValue.forEach(function(v){\n            queryParts.push(\"{'\"+key+\"'.EX.'\"+v+\"'}\");\n          });\n\n          queryPart = \"(\" + queryParts.join(\"OR\") + \")\";\n        }else{\n          queryPart = \"{'\"+key+\"'.\"+operator+\".'\"+compareValue+\"'}\";\n        };\n\n        queryParts.push(queryPart);\n      };\n\n      return queryParts.join(\"AND\");\n    };\n\n    var handleOr = function(key, value){\n      var queryPart = [];\n\n      value.forEach(function(query){\n        var key = Object.keys(query)[0];\n        var value = query[key];\n\n        if(typeof value == \"object\"){\n          var query = handleOtherOperators(key, value);\n          queryPart.push(query);\n        }else{\n          var query = handleEx(key, value);\n          queryPart.push(query);\n        };\n      });\n\n      return \"(\" + queryPart.join(\"OR\") + \")\";\n    };\n\n    for(var key in query){\n      var value = query[key];\n      var queryPart = \"\";\n\n      if(key == \"or\"){\n        queryPart = handleOr(key, value);\n      }else{\n        if(typeof value == \"object\"){\n          queryPart = handleOtherOperators(key, value);\n        }else{\n          queryPart = handleEx(key, query[key]);\n        };\n      };\n\n      validQuery.push(queryPart);\n    };\n\n    validQuery = validQuery.join(\"AND\");\n    return validQuery;\n  };\n\n  this.replaceFieldNames = function(query, dbid){\n    var config = this.config;\n\n    query = query.split(/(}AND|\\)AND|}OR|\\)OR)/).map(function(queryPart){\n      if(!/(}AND|\\)AND|}OR|\\)OR)/.test(queryPart)){\n        var field = queryPart.match(/\\{'*(.*)'\\..*'/)[1];\n\n        if(isNaN(field)){\n          var fid = config.tables[dbid][field];\n          queryPart = queryPart.replace(field, fid);\n        };\n      };\n\n      return queryPart;\n    });\n\n    return query.join(\"\");\n  };\n\n  this.replaceOptionFieldNames = function(value, dbid){\n    var config = this.config;\n\n    value = value.split(\".\");\n    value = value.map(function(fieldName){\n      if(isNaN(fieldName)){\n        var fid = config.tables[dbid][fieldName];\n        return fid;\n      }else{\n        return fieldName;\n      }\n    });\n\n    return value.join(\".\");\n  };\n\n  this.handleXMLCharacters = function(string){\n    if(typeof string == \"string\"){\n      string = string\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;')\n    };\n\n    return string;\n  };\n\n  this.buildPostData = function(dbid, data){\n    var postData = [\"<qdbapi>\"];\n\n    if(this.apptoken){\n      postData.push(this.createParameter(\"apptoken\", this.apptoken));\n    };\n\n    if(this.usertoken){\n      postData.push(this.createParameter(\"usertoken\", this.usertoken));\n    }\n\n    if(this.username && !this.ticket && !this.usertoken){\n      postData.push(this.createParameter(\"username\", this.username));\n      postData.push(this.createParameter(\"password\", this.password));\n    };\n\n    if(this.ticket && !this.usertoken){\n      postData.push(this.createParameter(\"ticket\", this.ticket));\n    };\n\n    for(var key in data.params){\n      var value = data.params[key];\n\n      if(key == \"clist\" || key == \"slist\" || key == \"options\"){\n        if(typeof value == \"object\"){\n          value = value.join(\".\");\n        };\n\n        if(this.config && (key == \"clist\" || key == \"slist\")){\n          if(value){\n            value = this.replaceOptionFieldNames(value, dbid);\n          };\n        };\n      }else if(key == \"query\"){\n        value = this.generateQuickbaseQuery(value);\n\n        if(this.config){\n          value = this.replaceFieldNames(value, dbid);\n        };\n\n        key = \"query\";\n      };\n\n      if(value){\n        postData.push(this.createParameter(key, value));\n      };\n    };\n\n    for(field in data.fieldParams){\n      if(this.config && parseInt(field).toString() == \"NaN\"){\n        var fid = this.config.tables[dbid][field];\n      }else{\n        var fid = field;\n      };\n\n      var fieldValue = this.handleXMLCharacters(data.fieldParams[field]);\n      postData.push(this.createFieldParameter(fid, fieldValue));\n    };\n\n    for(key in data.fidParams){\n      postData.push(this.createFidParameter(key, data.fidParams[key]));\n    };\n\n    if(data.csvData){\n      postData.push(this.createCSVParameter(data.csvData));\n    };\n\n    postData.push(\"</qdbapi>\");\n    postData = postData.join(\"\");\n\n    if(this.username || this.quickstartConfig){\n      return { \"xml\": postData }\n    }else{\n      return postData;\n    };\n  };\n\n  this.getNode = function(response, tag){\n    return $(response).find(tag).text();\n  };\n\n  this.getRecords = function(dbid, response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var recordsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      var fields = $(record).find(\"f\");\n\n      record = {}\n\n      for(var j=0; j < fields.length; j++){\n        var field = fields[j];\n        var id = parseInt($(field).attr(\"id\"));\n\n        if($(field).find(\"url\").text() != \"\"){\n          var url = $(field).find(\"url\").text();\n          var sections = url.split(\"/\");\n          var filename = sections[sections.length - 1];\n\n          var value = {\"filename\": filename, \"url\": url};\n        }else{\n          var value = $(field).text();\n        };\n\n        if(this.config){\n          var tableConfig = this.inverseTables[dbid];\n          if(tableConfig[id]){\n            id = tableConfig[id.toString()];\n            record[id] = value;\n          };\n        }else{\n          record[id] = value;\n        };\n      };\n\n      recordsArray.push(record);\n    };\n\n    return recordsArray;\n  };\n\n  this.getRids = function(response){\n    var records = $(response).find(\"records\").find(\"record\");\n    var ridsArray = [];\n\n    for(var i=0; i < records.length; i++){\n      var record = records[i];\n      ridsArray.push($(record).find('f[id=\"3\"]').text());\n    };\n\n    return ridsArray;\n  };\n\n  this.getNewRids = function(response){\n    var rids = $(response).find(\"rids\").find(\"rid\");\n    var ridsArray = [];\n\n    for(var i=0; i < rids.length; i++){\n      var rid = parseInt($(rids[i]).text());\n      ridsArray.push(rid);\n    };\n\n    return ridsArray;\n  };\n\n  this.getTableSchema = function(schema) {\n    var tableSchema = {\n      dbid: '',\n      tableName: '',\n      keyFid: '',\n      fields: this.getFields(schema)\n    };\n\n    var $schema = $(schema);\n    tableSchema.dbid = $schema.find('table_id').text();\n    tableSchema.tableName = $schema.find('name').text();\n    tableSchema.keyFid = $schema.find('key_fid').text();\n\n    return tableSchema;\n  };\n\n  this.getAppSchemaInfo = function(schema) {\n    var $schema = $(schema);\n    var tables = $schema.find(\"chdbid\");\n    var tableSchema = [];\n\n    for(var i=0; i < tables.length; i++){\n      var currentTable = $(tables[i]);\n\n      tableSchema.push({\n        name: currentTable.attr(\"name\"),\n        dbid: currentTable.text()\n      });\n    }\n\n    return tableSchema;\n  };\n\n  this.getFields = function(schema){\n    var fields = $(schema + ', fields').find(\"field\");\n    var fieldsObj = {};\n\n    for (var i=0; i < fields.length; i++){\n      var $field = $(fields[i]);\n      var fieldHash = {};\n\n      for (var j = 0; j < fields[i].attributes.length; j++) {\n        var prop = fields[i].attributes[j].name;\n        var val = fields[i].attributes[j].value;\n        if (prop == 'id') {\n          fieldHash['fid'] = val;\n        } else {\n          fieldHash[prop] = val;\n        }\n      }\n\n      $field.children().each(function(i, childNode) {\n        var prop = childNode.nodeName.toLowerCase();\n        var val = childNode.innerText;\n        if (prop != 'choices') fieldHash[prop] = val;\n      })\n\n      var choices = $field.find(\"choices\").find(\"choice\");\n      if (choices.length > 0){\n        var fieldChoices = [];\n        for(var j=0; j < choices.length; j++){\n\n          var choice = $(choices[j]).text();\n          fieldChoices.push(choice);\n        };\n\n        fieldHash[\"choices\"] = fieldChoices;\n      };\n\n      fieldsObj[$field.attr(\"id\")] = fieldHash;\n    };\n\n    return fieldsObj;\n  };\n\n  this.getReports = function(schema){\n    var reports = $(schema).find(\"queries\").find(\"query\");\n    var reportsObj = {};\n\n    for(var i=0; i < reports.length; i++){\n      var report = reports[i];\n      var reportHash = {\n        \"name\": $(report).find(\"qyname\").text(),\n        \"type\": $(report).find(\"qytype\").text(),\n        \"criteria\": $(report).find(\"qycrit\").text(),\n        \"clist\": $(report).find(\"qyclst\").text(),\n        \"slist\": $(report).find(\"qyslst\").text(),\n        \"options\": $(report).find(\"qyopts\").text()\n      }\n\n      reportsObj[$(report).attr(\"id\")] = reportHash;\n    };\n\n    return reportsObj;\n  };\n\n  this.formatUserRoles = function(schema){\n    var users = $(schema).find(\"users\").find(\"user\");\n    var allUsers = [];\n\n    for(var i=0; i < users.length; i++){\n      var user = users[i];\n      var roles = $(user).find(\"roles\").find(\"role\");\n\n      var userRoles = [];\n      for(var j=0; j < roles.length; j++){\n        var role = roles[j];\n        var roleHash = {\n          \"id\": $(role).attr(\"id\"),\n          \"name\": $(role).find(\"name\").text(),\n          \"accessId\": $(role).find(\"access\").attr(\"id\"),\n          \"access\": $(role).find(\"access\").text()\n        }\n\n        userRoles.push(roleHash);\n      };\n\n      var userHash = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"lastAccess\": $(user).find(\"lastAccess\").text(),\n        \"lastAccessAppLocal\": $(user).find(\"lastAccessAppLocal\").text(),\n        \"roles\": userRoles\n      };\n\n      allUsers.push(userHash);\n    };\n\n    return allUsers;\n  };\n\n  this.createParameter = function(key, value){\n    return \"<\" + key + \">\" + value + \"</\" + key + \">\";\n  };\n\n  this.createFieldParameter = function(fid, value){\n    var param = \"<field fid='\" + fid + \"'\";\n\n    if(value){\n      if(value.filename){\n        param += \" filename='\" + value.filename + \"'>\";\n\n        if(value.ignoreEncoding == true){\n          param += value.body;\n        }else{\n          param += this.base64Encode(value.body);\n        };\n      }else{\n        param += \">\"\n        param += value;\n      };\n    }else{\n      param += \">\";\n    };\n\n    param += \"</field>\";\n    return param;\n  };\n\n  this.createFidParameter = function(fid, value){\n    return \"<_fid_\" + fid + \">\" + value + \"</_fid_\" + fid + \">\";\n  };\n\n  this.createCSVParameter = function(data){\n    return \"<records_csv><![CDATA[\" + data + \"]]></records_csv>\";\n  };\n\n  this.base64Encode = function(input){\n    var output = \"\";\n    var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n\n    var string = input.replace(/\\r\\n/g,\"\\n\");\n    var utfText = \"\";\n\n    for(var n=0; n < string.length; n++){\n      var c = string.charCodeAt(n);\n\n      if (c < 128) {\n        utfText += String.fromCharCode(c);\n      }\n      else if((c > 127) && (c < 2048)) {\n        utfText += String.fromCharCode((c >> 6) | 192);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n      else {\n        utfText += String.fromCharCode((c >> 12) | 224);\n        utfText += String.fromCharCode(((c >> 6) & 63) | 128);\n        utfText += String.fromCharCode((c & 63) | 128);\n      }\n    }\n\n    input = utfText;\n\n    while(i < input.length){\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n\n      if(isNaN(chr2)){\n        enc3 = enc4 = 64;\n      }else if(isNaN(chr3)){\n        enc4 = 64;\n      };\n\n      output = output +\n      keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n      keyStr.charAt(enc3) + keyStr.charAt(enc4);\n    };\n\n    return output;\n  };\n\n  this.quickstartPost = function(data, callback, handler, dbid, action, proxy){\n    if(proxy){\n      var json = {\n        dbid: dbid,\n        realm: this.realm,\n        action: action,\n        apptoken: this.apptoken\n      };\n\n      json[\"xml\"] = data.xml;\n      json[\"quickstartAction\"] = \"Proxy\";\n      json[\"ticket\"] = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n    }else{\n      var json = data;\n    };\n\n    json = JSON.stringify(json)\n\n    var postData = {\n      url: this.proxies.quickstart,\n      data: json,\n      dataType: \"text\",\n      type: \"POST\",\n      contentType: \"application/json\"\n    };\n\n    if(this.async == \"callback\"){\n    \tpostData[\"success\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn callback(json);\n    \t\t} else {\n    \t\t\treturn callback(handler(json));\n    \t\t}\n    \t};\n\n    \t$.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n      postData[\"dataFilter\"] = function(json){\n    \t  json = JSON.parse(json);\n    \t  json = json.data || json;\n\n    \t\tif(json.error){\n    \t\t\treturn json;\n    \t\t} else {\n    \t\t\treturn handler(json);\n    \t\t}\n    \t};\n\n      return $.ajax(postData);\n    };\n  };\n\n  this.qbaseResponseCode = function(response){\n    var code = $(response).find(\"errcode\").text();\n    var message = $(response).find(\"errtext\").text();\n    message += \", \" + $(response).find(\"errdetail\").text();\n\n    return { error: { code: code, message: message }};\n  };\n\n  this.xmlPost = function(dbid, action, data, callback, handler){\n    if(this.quickstartConfig){\n      return _self.quickstartPost(data, callback, handler, dbid, action, true);\n    };\n\n    var url = \"/db/\" + dbid + \"?act=\" + action;\n    var postData = {\n      url: url,\n      data: data,\n      dataType: \"xml\",\n      type: \"POST\",\n      context: this,\n      contentType: \"text/xml\"\n    };\n\n    //local development\n    if(this.username){\n      data[\"realm\"] = this.realm;\n      data[\"call\"] = action;\n      data[\"apptoken\"] = this.apptoken || \"\";\n      data[\"dbid\"] = dbid;\n\n      postData[\"dataType\"] = \"text\";\n      postData[\"contentType\"] = \"application/json\";\n\n      postData[\"url\"] = this.proxies.local;\n      postData[\"data\"] = JSON.stringify(data);\n    };\n\n    if(this.async == \"callback\"){\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          return callback(qbaseResponse);\n        }else{\n          return callback(handler(xml));\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      $.ajax(postData);\n\n    } else if(this.async == \"promise\"){\n      postData[\"dataType\"] = \"text\";\n\n      postData[\"dataFilter\"] = function(xml){\n        var qbaseResponse = _self.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          return qbaseResponse;\n        }else{\n          return handler(xml);\n        };\n      };\n\n      return $.ajax(postData);\n    }else{\n      var response = null;\n\n      postData[\"success\"] = function(xml){\n        var qbaseResponse = this.qbaseResponseCode(xml);\n\n        if(qbaseResponse.error.code != \"0\"){\n          response = qbaseResponse;\n        }else{\n          response = handler(xml);\n        };\n      };\n\n      postData[\"error\"] = function(xml){\n        return callback({ error: { code: \"503\", message: \"Service Unavailable.\"}})\n      };\n\n      postData[\"async\"] = false;\n\n      $.ajax(postData);\n\n      return response;\n    };\n  };\n}\n\nfunction Base(config){\n  var BaseConnectInstance = new BaseConnect(config);\n\n  this.baseConnectInstance = BaseConnectInstance;\n  this.databaseId = config.databaseId;\n\n  this.Table = function(key, config){\n    this.removeQuickstartConfig = function(config){\n      delete config[\"quickstart_users\"];\n      delete config[\"quickstart_username\"];\n      delete config[\"quickstart_password\"];\n      delete config[\"quickstart_key\"];\n      return config;\n    };\n\n    if(BaseConnectInstance.config.quickstart){\n      config = this.removeQuickstartConfig(config);\n    };\n\n    this[key] = config;\n    this.tableName = key;\n    this.dbid = config.dbid;\n\n    this.doQuery = function(query, params, callback, handle){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        return BaseConnectInstance.getRecords(tableName, response, \"records\");\n      };\n\n      var queryParams = {\"fmt\": \"structured\", \"returnpercentage\": \"1\"}\n      if(query){\n        var isQid = !isNaN(query);\n\n        if(isQid){\n          queryParams.qid = query;\n        }else{\n          queryParams.query = query;\n        };\n      }else{\n        queryParams.query = \"{'3'.XEX.''}\"\n      };\n\n      if(params){\n        var clist = params.clist;\n      }else{\n        var params = {};\n      };\n\n      if(BaseConnectInstance.config && !clist){\n        var table = BaseConnectInstance.config.tables[tableName];\n\n        var clist = [];\n        for(key in table){\n          var value = table[key];\n\n          if(!isNaN(value)){\n            clist.push(key);\n          };\n        };\n\n        params.clist = clist.join(\".\");\n      };\n\n      queryParams.clist = params.clist;\n      queryParams.slist = params.slist\n      queryParams.options = params.options\n\n      var data = {\n        dbid: tableName,\n        action: \"DoQuery\",\n        params: queryParams\n      };\n\n      if(handle){\n        this.handle = handle;\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.find = function(rid, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          if(records.length > 1){\n            return records;\n          }else{\n            return records[0];\n          };\n        }else{\n          return {};\n        };\n      };\n\n      if(Object.prototype.toString.call(rid) == \"[object Array]\"){\n        var query = { \"3\": { in: rid }}\n      }else{\n        var query = { \"3\": rid };\n      };\n\n      return this.doQuery(query, null, callback, this.handle);\n    };\n\n    this.first = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[0];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.last = function(query, params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records[records.length - 1];\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.all = function(params, callback){\n      var tableName = this.tableName;\n\n      this.handle = function(response){\n        var records = BaseConnectInstance.getRecords(tableName, response, \"records\");\n        if(records.length > 0){\n          return records;\n        }else{\n          return {};\n        };\n      };\n\n      return this.doQuery({ \"3\": { XEX: \"\" } }, params, callback, this.handle);\n    };\n\n    this.getRids = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getRids(response);\n      };\n\n      params = {\n        clist: \"3\"\n      };\n\n      if(!query){\n        query = { \"3\": { XEX: \"\" } }\n      };\n\n      return this.doQuery(query, params, callback, this.handle);\n    };\n\n    this.doQueryCount = function(query, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"numMatches\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DoQueryCount\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.addRecord = function(fieldParams, callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"rid\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"AddRecord\",\n        fieldParams: fieldParams\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.editRecord = function(rid, fieldParams, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"EditRecord\",\n        fieldParams: fieldParams,\n        params: {\"rid\": rid}\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.changeRecordOwner = function(rid, owner, callback){\n      this.handle = function(response){\n        return true;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ChangeRecordOwner\",\n        params: {\"rid\": rid, \"newowner\": owner}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.copyMasterDetail = function(params, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNode(response, \"parentrid\");\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"CopyMasterDetail\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getRecordInfo = function(rid, callback){\n      this.handle = function(response){\n\n        var allFields = {};\n        var fields = $(response).find(\"field\");\n\n        for(var i=0; i < fields.length; i++){\n          var field = fields[i];\n          var fieldHash = {\n            \"name\": BaseConnectInstance.getNode(field, \"name\"),\n            \"type\": BaseConnectInstance.getNode(field, \"type\"),\n            \"value\": BaseConnectInstance.getNode(field, \"value\")\n          };\n\n          allFields[$(field).find(\"fid\").text()] = fieldHash;\n        };\n\n        var info = {\n          \"rid\": BaseConnectInstance.getNode(response, \"rid\"),\n          \"num_fields\": BaseConnectInstance.getNode(response, \"num_fields\"),\n          \"update_id\": BaseConnectInstance.getNode(response, \"update_id\"),\n          \"fields\": allFields\n        };\n\n        return info;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetRecordInfo\",\n        params: { \"rid\": rid }\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.deleteRecord = function(rid, callback){\n      this.handle = function(response){\n        var rid = BaseConnectInstance.getNode(response, \"rid\");\n        return rid ? true : false;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"DeleteRecord\",\n        params: {\"rid\": rid}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.purgeRecords = function(query, callback){\n      this.handle = function(response){\n        var numberOfRecordDeleted = BaseConnectInstance.getNode(response, \"num_records_deleted\");\n        return parseInt(numberOfRecordDeleted);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"PurgeRecords\",\n        params: {\"query\": query}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.runImport = function(id, callback){\n      this.handle = function(response){\n        var numberOfRecordsImported = BaseConnectInstance.getNode(response, \"import_status\").match(/\\d+/)[0];\n        return parseInt(numberOfRecordsImported);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"RunImport\",\n        params: {\"id\": id}\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.importFromCSV = function(csvArray, callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getNewRids(response);\n      };\n\n      var csv = \"\";\n      var clist = [];\n\n      for(key in csvArray[0]){\n        if(BaseConnectInstance.config){\n          tableConfig = BaseConnectInstance.config.tables[this.tableName];\n          key = tableConfig[key];\n        };\n\n        clist.push(key);\n      };\n\n      clist = clist.join(\".\");\n\n      for(var i=0; i < csvArray.length; i++){\n        var row = csvArray[i];\n        var rowValues = [];\n\n        for(key in row){\n          value = row[key];\n          value = value.toString().replace(/\"/g, '\"\"');\n          rowValues.push('\"' + value + '\"');\n        };\n\n        rowValues.join(\",\")\n        rowValues += \"\\n\"\n\n        csv += (rowValues);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"ImportFromCSV\",\n        params: {\"clist\": clist},\n        csvData: csv\n      }\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableFields = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getTableSchema(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.genAddRecordForm = function(params, callback){\n      this.handle = function(response){\n        return response;\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GenAddRecordForm\",\n        fidParams: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getNumRecords = function(callback){\n      this.handle = function(response){\n        return parseInt(BaseConnectInstance.getNode(response, \"num_records\"));\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetNumRecords\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.setFieldProperties = function(fid, params, callback){\n      this.handle = function(response){\n        var error = BaseConnectInstance.getNode(response, \"errcode\");\n        return error == 0 ? true : false;\n      };\n\n      params[\"fid\"] = fid;\n\n      var data = {\n        dbid: this.tableName,\n        action: \"SetFieldProperties\",\n        params: params\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n\n    this.getTableReports = function(callback){\n      this.handle = function(response){\n        return BaseConnectInstance.getReports(response);\n      };\n\n      var data = {\n        dbid: this.tableName,\n        action: \"GetSchema\"\n      };\n\n      return BaseConnectInstance.post(data, callback, this.handle);\n    };\n  };\n\n  this.setTables = function(tables){\n    for(var key in tables){\n      this[key] = new this.Table(key, tables[key]);\n    };\n  };\n\n  this.setTables(config.tables);\n\n  this.getAppTables = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getAppSchemaInfo(response);\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetSchema\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getOneTimeTicket = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"GetOneTimeTicket\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.authenticate = function(auth, hours, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"ticket\");\n    };\n\n    var data = {\n      action: \"Authenticate\",\n      params: { \"hours\": hours }\n    };\n\n    if(auth.ticket){\n      data.params.ticket = auth.ticket;\n    };\n\n    if(auth.username && auth.password){\n      data[\"username\"] = auth.username;\n      data[\"password\"] = auth.password;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.signOut = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      action: \"SignOut\",\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDBVar = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"value\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBvar\",\n      params: {\"varname\": name}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle)\n  };\n\n  this.setDBVar = function(name, value, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"SetDBvar\",\n      params: {\"varname\": name, \"value\": value}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.uploadPage = function(id, name, body, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pageID\");\n    };\n\n    var params = {\n      \"pagetype\": \"1\",\n      \"pagebody\": body\n    };\n\n    if(id){\n      params[\"pageid\"] = id;\n    }else if(name){\n      params[\"pagename\"] = name;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"AddReplaceDBPage\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deletePage = function(pageId, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"PageDelete\",\n      type: \"QBI\",\n      params: {\"pageid\": pageId}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbPage = function(pageId, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"pagebody\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBPage\",\n      type: \"API\",\n      params: { \"pageID\": pageId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.cloneDatabase = function(params, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"newdbid\");\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"CloneDatabase\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.createDatabase = function(name, description, createAppToken, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"CreateDatabase\",\n      type: \"API\",\n      params: { \"dbname\": name, \"dbdesc\": description, \"createapptoken\": createAppToken || false }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.deleteDatabase = function(callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"DeleteDatabase\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.renameApp = function(name, callback){\n    this.handle = function(response){\n      var error = BaseConnectInstance.getNode(response, \"errcode\");\n      return error == \"0\" ? true : false;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"RenameApp\",\n      type: \"API\",\n      params: { \"newappname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.findDbByName = function(name, callback){\n    this.handle = function(response){\n      return BaseConnectInstance.getNode(response, \"dbid\");\n    };\n\n    var data = {\n      action: \"FindDBByName\",\n      type: \"API\",\n      params: { \"dbname\": name }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getTables = function(callback){\n    this.handle = function(schema){\n      var tables = $(schema).find(\"chdbid\");\n      var tablesObj = {};\n\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableName = $(table).attr(\"name\");\n        var tableId = $(table).text();\n\n        tablesObj[tableName] = tableId;\n      }\n\n      return tablesObj;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetSchema\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getAppDtmInfo = function(callback){\n    this.handle = function(response){\n\n      var allTables = {};\n      var tables = $(response).find(\"tables\").find(\"table\");\n      for(var i=0; i < tables.length; i++){\n        var table = tables[i];\n        var tableHash = {\n          \"lastModifiedTime\": $(table).find(\"lastModifiedTime\").text(),\n          \"lastRecModTime\": $(table).find(\"lastRecModTime\").text()\n        };\n\n        allTables[$(table).attr(\"id\")] = tableHash;\n      };\n\n      var info = {\n        \"requestTime\": BaseConnectInstance.getNode(response, \"RequestTime\"),\n        \"requestNextAllowedTime\": BaseConnectInstance.getNode(response, \"RequestNextAllowedTime\"),\n        \"lastModifiedTime\": BaseConnectInstance.getNode(response, \"lastModifiedTime\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"tables\": allTables\n      };\n\n      return info;\n    };\n\n    var data = {\n      action: \"GetAppDTMInfo\",\n      type: \"API\",\n      params: { \"dbid\": this.databaseId }\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getDbInfo = function(callback){\n    this.handle = function(response){\n      var info = {\n        \"dbname\": BaseConnectInstance.getNode(response, \"dbname\"),\n        \"lastRecModTime\": BaseConnectInstance.getNode(response, \"lastRecModTime\"),\n        \"createdTime\": BaseConnectInstance.getNode(response, \"createdTime\"),\n        \"numRecords\": BaseConnectInstance.getNode(response, \"numRecords\"),\n        \"mgrID\": BaseConnectInstance.getNode(response, \"mgrID\"),\n        \"mgrName\": BaseConnectInstance.getNode(response, \"mgrName\"),\n        \"version\": BaseConnectInstance.getNode(response, \"version\"),\n        \"time_zone\": BaseConnectInstance.getNode(response, \"time_zone\")\n      };\n\n      return info;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"GetDBInfo\",\n      type: \"API\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.grantedDbs = function(params, callback){\n    this.handle = function(response){\n\n      var allDatabases = [];\n      var databases = $(response).find(\"databases\").find(\"dbinfo\");\n\n      for(var i=0; i < databases.length; i++){\n        var database = databases[i];\n        var databaseHash = {\n          \"dbname\": BaseConnectInstance.getNode(database, \"dbname\"),\n          \"dbid\": BaseConnectInstance.getNode(database, \"dbid\")\n        };\n\n        allDatabases.push(databaseHash);\n      };\n\n      return allDatabases;\n    };\n\n    var data = {\n      action: \"GrantedDBs\",\n      type: \"API\",\n      params: params\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserInfo = function(email, callback, handler){\n    this.handle = function(response){\n      var user = $(response).find(\"user\");\n\n      user = {\n        \"id\": $(user).attr(\"id\"),\n        \"firstName\": $(user).find(\"firstName\").text(),\n        \"lastName\": $(user).find(\"lastName\").text(),\n        \"login\": $(user).find(\"login\").text(),\n        \"email\": $(user).find(\"email\").text(),\n        \"screenName\": $(user).find(\"screenName\").text(),\n        \"isVerified\": $(user).find(\"isVerified\").text(),\n        \"externalAuth\": $(user).find(\"externalAuth\").text()\n      };\n\n      return user;\n    };\n\n    if(!email){\n      email = \"\";\n    };\n\n    var data = {\n      dbid: \"main\",\n      action: \"GetUserInfo\",\n      params: {\"email\": email}\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.getUserRoles = function(callback){\n    this.handle = function(response){\n      return BaseConnectInstance.formatUserRoles(response);\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"UserRoles\"\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.changeUserRole = function(userId, roleId, newRoleId, callback){\n    this.handle = function(response){\n      return true;\n    };\n\n    var data = {\n      dbid: this.databaseId,\n      action: \"ChangeUserRole\",\n      params: {\n        userId: userId,\n        roleId: roleId\n      }\n    };\n\n    if(newRoleId){\n      data[\"params\"][\"newRoleId\"] = newRoleId;\n    };\n\n    return BaseConnectInstance.post(data, callback, this.handle);\n  };\n\n  this.quickstart = {\n    // data = {\n    //   username: 'test@example.com',\n    //   password: 'password123'\n    // }\n    register: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 12);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n\n        return response;\n      };\n\n      data.quickstartAction = \"Register\";\n      data.appToken = config.apptoken;\n      data.realm = config.realm;\n      data.dbid = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    // data = {\n    //   username: 'test@example.com',\n    //   password: 'password123'\n    // }\n    signIn: function(data, callback){\n      this.handler = function(response){\n        if(response.ticket){\n          BaseHelpers.setCookie(\"quickstart_session\", JSON.stringify(response), 12);\n        }else{\n          BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n        };\n\n        return response;\n      };\n\n      data.quickstartAction = \"SignIn\";\n      data.appToken = config.apptoken;\n      data.realm = config.realm;\n      data.dbid = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    signOut: function(callback){\n      BaseHelpers.setCookie(\"quickstart_session\", \"\", -1);\n\n      if(callback){\n      \tcallback(true);\n      }\n    },\n\n    // data = {\n    //   currentPassword: 'password123',\n    //   newPassword: 'notPassword123'\n    // }\n    changePassword: function(data, callback){\n      this.handler = function(response){\n        return response;\n      };\n\n      data.quickstartAction = \"ChangePassword\";\n      data.ticket = JSON.parse(BaseHelpers.getCookie(\"quickstart_session\")).ticket;\n      data.realm = config.realm;\n      data.dbid = config.databaseId;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    // emailObj = {\n    //   to: 'test@example.com',\n    //   subject: 'email subject'\n    //   callbackUrl: 'callbackUrl',\n    //   html: 'body of the email with link that matches the callbackUrl'\n    // }\n    forgotPassword: function(emailObj, callback) {\n      this.handler = function(response) {\n        return response;\n      };\n\n      var data = {\n        email: emailObj\n      };\n\n      data.quickstartAction = \"ForgotPassword\";\n      data.realm = config.realm;\n      data.dbid = config.databaseId;\n      data.appToken = config.apptoken;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    },\n\n    // data = {\n    //   sessionID: 'sessionID pulled from url params',\n    //   newPassword: 'users new password'\n    // }\n    resetPassword: function(data, callback) {\n      this.handler = function(response) {\n        return response;\n      };\n\n      data.quickstartAction = \"ResetPassword\";\n      data.realm = config.realm;\n      data.dbid = config.databaseId;\n      data.appToken = config.apptoken;\n\n      return _self.quickstartPost(data, callback, this.handler);\n    }\n  }\n}\n\nvar BaseHelpers = {\n  options: {\n    timeZone: 'utc',\n    format: 'hours'\n  },\n\n  setCookie: function(name, value, hours) {\n    var d = new Date();\n    d.setTime(d.getTime() + (hours*60*60*1000));\n    var expires = \"expires=\"+ d.toUTCString();\n\n    document.cookie = name + \"=\" + value + \"; \" + expires;\n  },\n\n  getCookie: function(name) {\n    var name = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0)==' ') {\n        c = c.substring(1);\n      };\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length,c.length);\n      };\n    }\n    return \"\";\n  },\n\n  inverseTables: function(config){\n    var inverseTables = {};\n\n    for(var table in config){\n      var newObject = {};\n\n      for(var field in config[table]){\n        newObject[config[table][field].toString()] = field;\n      };\n\n      inverseTables[table] = newObject;\n    };\n\n    return inverseTables;\n  },\n\n  getUrlParam: function(name){\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n  },\n\n  formatDateElement: function(element){\n    element = element.toString();\n    if(element.length == 1){\n      element = \"0\" + element;\n    };\n\n    return element;\n  },\n\n  dateToString: function(milliseconds){\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) );\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n\n      date = [month, day, date.getUTCFullYear()].join(\"-\");\n\n      return date;\n    } else {\n      return ' ';\n    }\n  },\n\n  dateTimeToString: function(milliseconds, timeZone) {\n    var today = new Date();\n    var timeZone = timeZone ? timeZone.toLowerCase().trim() : this.options.timeZone.toLowerCase();\n\n    Date.prototype.stdTimezoneOffset = function() {\n      var jan = new Date(this.getFullYear(), 0, 1);\n      var jul = new Date(this.getFullYear(), 6, 1);\n      return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n    }\n\n    Date.prototype.dst = function() {\n      return this.getTimezoneOffset() < this.stdTimezoneOffset();\n    }\n\n    var zoneOffsets = {\n      \"utc\": 0,\n      \"eastern\": today.dst() ? -4 : -5,\n      \"central\": today.dst() ? -5 : -6,\n      \"mountain\": today.dst() ? -6 : -7,\n      \"pacific\": today.dst() ? -7 : -8\n    };\n\n    var offset = zoneOffsets[timeZone];\n\n    if(milliseconds) {\n      var date = new Date( parseInt(milliseconds) + (60 * 60 * 1000 * offset) );\n\n      var year = this.formatDateElement((date.getUTCFullYear));\n      var month = this.formatDateElement((date.getUTCMonth() + 1));\n      var day = this.formatDateElement(date.getUTCDate());\n      var hours = this.formatDateElement(date.getUTCHours());\n      var minutes = this.formatDateElement(date.getUTCMinutes());\n      var seconds = this.formatDateElement(date.getUTCSeconds());\n\n      var dateTime = [month, day, date.getUTCFullYear()].join(\"-\");\n      var ampm = parseInt(hours) >= 12 ? 'PM' : 'AM';\n\n      hours = hours % 12;\n      hours = hours ? hours : 12; // the hour '0' should be '12'\n\n      dateTime += \" \"\n      dateTime += [hours, minutes].join(\":\")\n      dateTime += \" \" + ampm\n      return dateTime;\n    } else {\n      return '';\n    }\n  },\n\n  durationToString: function(milliseconds, format) {\n    var ms = parseInt(milliseconds);\n    var result;\n    var format = format ? format.trim().toLowerCase() : this.options.format.toLowerCase();\n\n    var formatType = {\n      \"days\": function() {\n        return ms / 86400000;\n      },\n      \"hours\": function() {\n        return ms / 3600000;\n      },\n      \"minutes\": function() {\n        return ms / 60000;\n      },\n      \"seconds\": function() {\n        return ms / 1000;\n      }\n    };\n\n    if(milliseconds) {\n      if (formatType[format]) {\n        result = formatType[format]();\n      }\n      else {\n        result = formatType[\"hours\"]();\n        console.log(\"The format parameter passed to BaseHelpers.durationToString() was incorrect. Using the format for 'hours' instead.\");\n      }\n\n      result = Math.round(result * 100) / 100;\n      return result.toString();\n    } else {\n      return '';\n    }\n  },\n\n  timeOfDayToString: function(milliseconds){\n    var timeOfDay = \"\";\n\n    timeOfDay = new Date()\n    timeOfDay.setHours(\"\");\n    timeOfDay.setMinutes(\"\");\n    timeOfDay.setSeconds(\"\");\n    timeOfDay.setMilliseconds(milliseconds);\n\n    var hours = timeOfDay.getHours().toString();\n    var minutes = timeOfDay.getMinutes().toString();\n    var ampm = hours >= 12 ? \"pm\" : \"am\";\n\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes.length > 1 ? minutes : \"0\" + minutes;\n\n    timeOfDay = hours + \":\" + minutes + \" \" + ampm\n\n    return timeOfDay;\n  },\n\n  redirectToEditForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=er&rid=\" + rid;\n  },\n\n  redirectToViewForm: function(dbid, rid, root){\n    var root = root || '';\n    window.location = root + \"/db/\"+dbid+\"?a=dr&rid=\" + rid;\n  },\n\n  downloadFile: function(dbid, rid, fid, version){\n    var version = version || 0;\n\n    window.location = \"https://www.quickbase.com/up/\"+dbid+\"/a/r\"+rid+\"/e\"+fid+\"/v\" + version;\n  }\n};"]}